{
    "swagger": "2.0",
    "info": {
        "description": "Multicloud IaaS API",
        "version": "2019-01-15",
        "title": "Multicloud IaaS API"
    },
    "basePath": "/",
    "tags": [
        {
            "name": "About"
        },
        {
            "name": "Cloud Account"
        },
        {
            "name": "Compute"
        },
        {
            "name": "Data Collector"
        },
        {
            "name": "Disk"
        },
        {
            "name": "Fabric AWS Volume Types"
        },
        {
            "name": "Fabric Azure Storage Account"
        },
        {
            "name": "Fabric Flavors"
        },
        {
            "name": "Fabric Images"
        },
        {
            "name": "Fabric Network"
        },
        {
            "name": "Fabric vSphere Datastore"
        },
        {
            "name": "Fabric vSphere Storage Policies"
        },
        {
            "name": "Flavor Profile"
        },
        {
            "name": "Flavors"
        },
        {
            "name": "Image Profile"
        },
        {
            "name": "Images"
        },
        {
            "name": "Load Balancer"
        },
        {
            "name": "Location"
        },
        {
            "name": "Login"
        },
        {
            "name": "Network"
        },
        {
            "name": "Network Profile"
        },
        {
            "name": "Project"
        },
        {
            "name": "Request"
        },
        {
            "name": "Security Group"
        },
        {
            "name": "Storage Profile"
        }
    ],
    "schemes": [
        "https"
    ],
    "paths": {
        "/iaas/api/about": {
            "get": {
                "tags": [
                    "About"
                ],
                "summary": "Get about page",
                "description": "Get about page that contains information about the API version.",
                "operationId": "getAboutPage",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/About"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/block-devices": {
            "get": {
                "tags": [
                    "Disk"
                ],
                "summary": "Get BlockDevices",
                "description": "Get all BlockDevices",
                "operationId": "getBlockDevices",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BlockDeviceResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Disk"
                ],
                "summary": "Create BlockDevice",
                "description": "Following disk custom properties can be passed while creating a block device: \n\r\n\r    1. dataStore: Defines name of the datastore in which the disk has to be provisioned. \n\r    2. storagePolicy: Defines name of the storage policy in which the disk has to be provisioned. If name of the datastore is specified in the custom properties then, datastore takes precedence.\n\r    3. provisioningType: Defines the type of provisioning. For eg. thick/thin. ",
                "operationId": "createBlockDevice",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Disk Specification instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BlockDeviceSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/block-devices/{id}": {
            "get": {
                "tags": [
                    "Disk"
                ],
                "summary": "Get BlockDevice",
                "description": "Get a single BlockDevice",
                "operationId": "getBlockDevice",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the block device.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BlockDevice"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Disk"
                ],
                "summary": "Delete a BlockDevice",
                "description": "Delete a BlockDevice",
                "operationId": "deleteBlockDevice",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the block device.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/cloud-accounts": {
            "get": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "List cloud accounts",
                "description": "List all cloud accounts within the current organization",
                "operationId": "getCloudAccounts",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Create a cloud account",
                "description": "Create a cloud account in the current organization",
                "operationId": "createCloudAccount",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccount instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudAccountSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccount"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/cloud-accounts-aws": {
            "get": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Retrieve AWS cloud accounts",
                "description": "Retrieve all AWS cloud accounts",
                "operationId": "getAwsCloudAccounts",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAwsResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Create an AWS cloud account",
                "description": "Create an AWS cloud account",
                "operationId": "createCloudAccountAws",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccountAws specification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAwsSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccount"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/cloud-accounts-aws/region-enumeration": {
            "post": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Retrieve regions for an AWS cloud account",
                "description": "Initiate data collection for the regions in an AWS cloud account",
                "operationId": "enumerateAwsRegions",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccount specification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAwsSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountRegions"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/cloud-accounts-aws/{id}": {
            "get": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Retrieve an AWS cloud account",
                "description": "Retrieve an AWS cloud account with a given ID",
                "operationId": "getAwsCloudAccount",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cloud Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAws"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Delete an AWS cloud account",
                "description": "Delete an AWS cloud account with given ID",
                "operationId": "deleteCloudAccountAws",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cloud Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/cloud-accounts-azure": {
            "get": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Retrieve Azure cloud accounts",
                "description": "List all Azure cloud accounts within the current organization",
                "operationId": "getAzureCloudAccounts",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAzureResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Create an Azure cloud account",
                "description": "Create an azure cloud account within the current organization",
                "operationId": "createCloudAccountAzure",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccountAzure specification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAzureSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccount"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/cloud-accounts-azure/region-enumeration": {
            "post": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Retrieve regions for an Azure cloud account",
                "description": "Initiate data collection for the regions in an Azure cloud account",
                "operationId": "enumerateAzureRegions",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccountAzure specification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAzureSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountRegions"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/cloud-accounts-azure/{id}": {
            "get": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Retrieve an Azure Cloud Account",
                "description": "Retrieve an Azure Cloud Account with a given ID",
                "operationId": "getAzureCloudAccount",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cloud Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAzure"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Delete an Azure Cloud Account",
                "description": "Delete an Azure Cloud Account with given ID",
                "operationId": "deleteCloudAccountAzure",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cloud Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/cloud-accounts-nsx-t": {
            "get": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Retrieve Nsx-T cloud accounts",
                "description": "List all Nsx-T cloud accounts within the current organization",
                "operationId": "getNsxTCloudAccounts",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxTResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Create a NSX-T cloud account",
                "description": "Create a NSX-T cloud account within the current organization",
                "operationId": "createCloudAccountNsxT",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccountNsxT specification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxTSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxT"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/cloud-accounts-nsx-t/{id}": {
            "get": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Retrieve a Nsx-T cloud account",
                "description": "Retrieve a Nsx-T cloud account",
                "operationId": "getNsxTCloudAccount",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cloud Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxT"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Delete a Nsx-T cloud account",
                "description": "Delete a Nsx-T cloud account with a given ID",
                "operationId": "deleteCloudAccountNsx-T",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cloud Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/cloud-accounts-nsx-v": {
            "get": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Retrieve NSX-V cloud accounts",
                "description": "List all NSX-V cloud accounts within the current organization",
                "operationId": "getNsxVCloudAccounts",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxVResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Create a NSX-V cloud account",
                "description": "Create a NSX-V cloud account within the current organization",
                "operationId": "createCloudAccountNsxV",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccountNsxV specification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxVSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxV"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/cloud-accounts-nsx-v/{id}": {
            "get": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Retrieve a NSX-V cloud account",
                "description": "Retrieve a NSX-V cloud account",
                "operationId": "getNsxVCloudAccount",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cloud Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxV"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Delete a Nsx-V cloud account",
                "description": "Delete a Nsx-V cloud account with a given ID",
                "operationId": "deleteCloudAccountNsx-V",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cloud Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/cloud-accounts-vsphere": {
            "get": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Retrieve vSphere cloud accounts",
                "description": "List all vSphere Cloud Accounts within the current organization",
                "operationId": "getVsphereCloudAccounts",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVsphereResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Create a vSphere cloud account",
                "description": "Create a vSphere cloud account within the current organization",
                "operationId": "createCloudAccountVsphere",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccountVsphere specification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVsphereSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccount"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/cloud-accounts-vsphere/region-enumeration": {
            "post": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Enumerate regions for a vSphere cloud account",
                "description": "Initiate data collection for the regions in a cloud account",
                "operationId": "enumerateVSphereRegions",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccountVsphere specification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVsphereSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountRegions"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/cloud-accounts-vsphere/{id}": {
            "get": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Retrieve a vSphere cloud account",
                "description": "Retrieve a vSphere cloud account for a given ID",
                "operationId": "getVSphereCloudAccount",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cloud Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVsphere"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Delete a vSphere cloud account",
                "description": "Delete a vSphere Cloud Account with a given ID",
                "operationId": "deleteCloudAccountVsphere",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cloud Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/cloud-accounts/region-enumeration": {
            "post": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Retrieve regions for a cloud account",
                "description": "Initiate data collection for the specified regions in a cloud account",
                "operationId": "enumerateRegions",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccount instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudAccountSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountRegions"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/cloud-accounts/{id}": {
            "get": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Retrieve a cloud account",
                "description": "Retrieve a cloud account for a given ID",
                "operationId": "getCloudAccount",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cloud Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccount"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Delete a cloud account",
                "description": "Delete a cloud account with a given id",
                "operationId": "deleteCloudAccount",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cloud Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Cloud Account"
                ],
                "summary": "Patch CloudAccount",
                "description": "Patch a single CloudAccount",
                "operationId": "patchCloudAccount",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the cloudAccount",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccount instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudAccountSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CloudAccount"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/data-collectors": {
            "get": {
                "tags": [
                    "Data Collector"
                ],
                "summary": "Get Data Collectors",
                "description": "Get all Data Collectors.",
                "operationId": "getDataCollectors",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataCollectorResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Data Collector"
                ],
                "summary": "Create Data collector",
                "description": "Create a new Data Collector.",
                "operationId": "createDataCollector",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataCollectorRegistration"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/data-collectors/{id}": {
            "get": {
                "tags": [
                    "Data Collector"
                ],
                "summary": "Get Data Collector",
                "description": "Get a single Data Collector.",
                "operationId": "getDataCollector",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Data Collector.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataCollector"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Data Collector"
                ],
                "summary": "Delete Data Collector",
                "description": "Delete a single Data Collector.",
                "operationId": "deleteDataCollector",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Data Collector.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/fabric-aws-volume-types": {
            "get": {
                "tags": [
                    "Fabric AWS Volume Types"
                ],
                "summary": "Get FabricAwsVolumeTypes",
                "description": "Get all Fabric AWS Volume Types.",
                "operationId": "getFabricAwsVolumeTypes",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/VolumeTypeList"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/fabric-azure-storage-accounts": {
            "get": {
                "tags": [
                    "Fabric Azure Storage Account"
                ],
                "summary": "Get FabricAzureStorageAccounts",
                "description": "Get all Fabric Azure Storage Accounts.",
                "operationId": "getAzureStorageAccounts",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FabricAzureStorageAccountResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/fabric-flavors": {
            "get": {
                "tags": [
                    "Fabric Flavors"
                ],
                "summary": "Get all FabricFlavors",
                "description": "Get all fabric flavors.",
                "operationId": "getFabricFlavors",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FabricFlavorResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/fabric-images": {
            "get": {
                "tags": [
                    "Fabric Images"
                ],
                "summary": "Get Images",
                "description": "Get all Images.",
                "operationId": "getFabricImages",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FabricImageResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/fabric-images/{id}": {
            "get": {
                "tags": [
                    "Fabric Images"
                ],
                "summary": "Get Image",
                "description": "Get a single Image.",
                "operationId": "getImage",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the image.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FabricImage"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/fabric-networks": {
            "get": {
                "tags": [
                    "Fabric Network"
                ],
                "summary": "Get FabricNetworks",
                "description": "Get all FabricNetworks.",
                "operationId": "getFabricNetworks",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FabricNetworkResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/fabric-networks/{id}": {
            "get": {
                "tags": [
                    "Fabric Network"
                ],
                "summary": "Get single Fabric Network",
                "description": "Get a Fabric Network.",
                "operationId": "getSingleFabricNetwork",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the fabric network.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FabricNetwork"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Fabric Network"
                ],
                "summary": "Update a FabricNetwork.",
                "description": "Update a FabricNetwork. Only tag updates are supported. ",
                "operationId": "patchFabricNetwork",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Fabric Network.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Fabric Network Specification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FabricNetworkSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/fabric-vsphere-datastores": {
            "get": {
                "tags": [
                    "Fabric vSphere Datastore"
                ],
                "summary": "Get FabricVsphereDatastores",
                "description": "Get all Fabric vSphere Datastores.",
                "operationId": "getFabricVsphereDatastores",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FabricVsphereDatastoreResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/fabric-vsphere-storage-policies": {
            "get": {
                "tags": [
                    "Fabric vSphere Storage Policies"
                ],
                "summary": "Get FabricVsphereStoragePolices",
                "description": "Get all Fabric vSphere Storage Polices.",
                "operationId": "getFabricVsphereStoragePolicies",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FabricVsphereStoragePolicyResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/flavor-profiles": {
            "get": {
                "tags": [
                    "Flavor Profile"
                ],
                "summary": "Get FlavorProfile",
                "description": "Get all flavors.",
                "operationId": "getFlavorProfiles",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "regionId",
                        "in": "query",
                        "description": "The internal id of the region for which this entity is defined. This is the id property of the Region object retrieved through /iaas/api/regions. Within an entity, the regionId can be obtained as the last path segment of the _links.region.href property",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FlavorProfileResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Flavor Profile"
                ],
                "summary": "Create FlavorProfile",
                "description": "Create a new FlavorProfile.",
                "operationId": "createFlavor",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "FlavorProfile instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FlavorProfileSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FlavorProfile"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/flavor-profiles/{id}": {
            "get": {
                "tags": [
                    "Flavor Profile"
                ],
                "summary": "Get FlavorProfile",
                "description": "Get a single FlavorProfile.",
                "operationId": "getFlavorProfile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the flavor.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FlavorProfile"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Flavor Profile"
                ],
                "summary": "Delete FlavorProfile",
                "description": "Delete a single FlavorProfile.",
                "operationId": "deleteFlavorProfile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the flavor.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Flavor Profile"
                ],
                "summary": "Update FlavorProfile",
                "description": "Update a single FlavorProfile.",
                "operationId": "updateFlavor",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the flavor.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "FlavorProfile instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FlavorProfileSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FlavorProfile"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/flavors": {
            "get": {
                "tags": [
                    "Flavors"
                ],
                "summary": "Get Flavors",
                "description": "Get all flavors defined in FlavorProfile",
                "operationId": "getFlavors",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "regionId",
                        "in": "query",
                        "description": "The internal id of the region for which this entity is defined. This is the id property of the Region object retrieved through /iaas/api/regions. Within an entity, the regionId can be obtained as the last path segment of the _links.region.href property",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FlavorResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/image-profiles": {
            "get": {
                "tags": [
                    "Image Profile"
                ],
                "summary": "Get ImageProfile",
                "description": "Get all image profiles.",
                "operationId": "getImageProfiles",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "regionId",
                        "in": "query",
                        "description": "The internal id of the region for which this entity is defined. This is the id property of the Region object retrieved through /iaas/api/regions. Within an entity, the regionId can be obtained as the last path segment of the _links.region.href property",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ImageProfileResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Image Profile"
                ],
                "summary": "Create ImageProfile",
                "description": "Create a new image profile.",
                "operationId": "createImage",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "ImageProfile instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ImageProfileSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ImageProfile"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/image-profiles/{id}": {
            "get": {
                "tags": [
                    "Image Profile"
                ],
                "summary": "Get ImageProfile",
                "description": "Get a single image profile.",
                "operationId": "getImageProfile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the image.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ImageProfile"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Image Profile"
                ],
                "summary": "Delete ImageProfile",
                "description": "Delete a single image profile.",
                "operationId": "deleteImageProfile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the image.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Image Profile"
                ],
                "summary": "Update ImageProfile",
                "description": "Update a single image profile.",
                "operationId": "updateImage",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the image.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "ImageProfile instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ImageProfileSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ImageProfile"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/images": {
            "get": {
                "tags": [
                    "Images"
                ],
                "summary": "Get Images",
                "description": "Get all images defined in ImageProfile.",
                "operationId": "getImages",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "regionId",
                        "in": "query",
                        "description": "The internal id of the region for which this entity is defined. This is the id property of the Region object retrieved through /iaas/api/regions. Within an entity, the regionId can be obtained as the last path segment of the _links.region.href property",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ImageResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/load-balancers": {
            "get": {
                "tags": [
                    "Load Balancer"
                ],
                "summary": "Get LoadBalancers",
                "description": "Get a page of Load Balancers.",
                "operationId": "getLoadBalancers",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/LoadBalancerResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Load Balancer"
                ],
                "summary": "Create LoadBalancer",
                "description": "Create a new Load Balancer.",
                "operationId": "createLoadBalancer",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "LoadBalancer Specification instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoadBalancerSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/load-balancers/{id}": {
            "get": {
                "tags": [
                    "Load Balancer"
                ],
                "summary": "Describe a LoadBalancer",
                "description": "Describe a Load Balancer.",
                "operationId": "describeLoadBalancer",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the load balancer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/LoadBalancer"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Load Balancer"
                ],
                "summary": "Delete a LoadBalancer",
                "description": "Delete a Load Balancer.",
                "operationId": "deleteLoadBalancer",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the load balancer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/load-balancers/{id}/operations/delete": {
            "post": {
                "tags": [
                    "Load Balancer"
                ],
                "summary": "Delete operation for LoadBalancer",
                "description": "Perform a second day delete operation for Load Balancer.",
                "operationId": "loadBalancerDeleteOperation",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the load balancer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/load-balancers/{id}/operations/scale": {
            "post": {
                "tags": [
                    "Load Balancer"
                ],
                "summary": "Scale operation for LoadBalancer",
                "description": "Perform a second day scale operation for Load Balancer.",
                "operationId": "loadBalancerScaleOperation",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "LoadBalancer Specification instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoadBalancerSpecification"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the load balancer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "Retrieve AuthToken for local csp users",
                "description": "Retrieve AuthToken for local csp users.",
                "operationId": "retrieveAuthToken",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "CspLoginSpecification instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CspLoginSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/machines": {
            "get": {
                "tags": [
                    "Compute"
                ],
                "summary": "Get Machines",
                "description": "Get all Machines.",
                "operationId": "getMachines",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MachineResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Compute"
                ],
                "summary": "Create Machine",
                "description": "Create a new Machine.",
                "operationId": "createMachine",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Machine Specification instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MachineSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/machines/{id}": {
            "get": {
                "tags": [
                    "Compute"
                ],
                "summary": "Describe a Machine",
                "description": "Describe a Machine.",
                "operationId": "describeMachine",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Machine"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Compute"
                ],
                "summary": "Delete a Machine",
                "description": "Delete a Machine.",
                "operationId": "deleteMachine",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Compute"
                ],
                "summary": "Update a Machine.",
                "description": "Update a Machine. Only tag updates are supported. All other properties in the MachineSpecification body are ignored.",
                "operationId": "updateMachine",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Machine Specification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MachineSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/machines/{id}/disks": {
            "get": {
                "tags": [
                    "Disk",
                    "Compute"
                ],
                "summary": "Get Machine Disks",
                "description": "Get all disks of a given machine.",
                "operationId": "getMachineDisks",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BlockDeviceResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Disk",
                    "Compute"
                ],
                "summary": "Add Machine Disk",
                "description": "Attach a disk to a machine.",
                "operationId": "addMachineDisk",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Disk Specification instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DiskAttachmentSpecification"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BlockDevice"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/machines/{id}/disks/{id1}": {
            "get": {
                "tags": [
                    "Disk",
                    "Compute"
                ],
                "summary": "Get a Machine Disk",
                "description": "Get a single disk of a given machine.",
                "operationId": "getMachineDisk",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id1",
                        "in": "path",
                        "description": "The ID of the disk.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BlockDevice"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Disk",
                    "Compute"
                ],
                "summary": "Delete Machine Disk",
                "description": "Remove a disk from a given machine.",
                "operationId": "deleteMachineDisk",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id1",
                        "in": "path",
                        "description": "The ID of the disk.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BlockDevice"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/machines/{id}/network-interfaces/{id1}": {
            "get": {
                "tags": [
                    "Network",
                    "Compute"
                ],
                "summary": "Get Machine NetworkInterface",
                "description": "Get a single NetworkInterface of a given machine.",
                "operationId": "getMachineNetworkInterface",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id1",
                        "in": "path",
                        "description": "The ID of the network interface.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NetworkInterface"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/machines/{id}/operations/power-off": {
            "post": {
                "tags": [
                    "Compute"
                ],
                "summary": "Power-off a Machine",
                "description": "Power-off a Machine",
                "operationId": "machinePowerOffOperation",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/machines/{id}/operations/power-on": {
            "post": {
                "tags": [
                    "Compute"
                ],
                "summary": "Power-on a Machine.",
                "description": "Power-on a Machine.",
                "operationId": "machinePowerOnOperation",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/machines/{id}/operations/reboot": {
            "post": {
                "tags": [
                    "Compute"
                ],
                "summary": "Reboot a Machine",
                "description": "Reboot a Machine",
                "operationId": "machineRebootOperation",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/machines/{id}/operations/reset": {
            "post": {
                "tags": [
                    "Compute"
                ],
                "summary": "Reset a Machine",
                "description": "Reset a Machine",
                "operationId": "machineResetOperation",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/machines/{id}/operations/resize": {
            "post": {
                "tags": [
                    "Compute"
                ],
                "summary": "Resize a Machine",
                "description": "Resize a Machine",
                "operationId": "machineResizeOperation",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The desired flavor to resize the Machine.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cpuCount",
                        "in": "query",
                        "description": "The desired number of CPUs to resize the Machine",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "memoryInMB",
                        "in": "query",
                        "description": "The desired memory in MBs to resize the Machine",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/machines/{id}/operations/restart": {
            "post": {
                "tags": [
                    "Compute"
                ],
                "summary": "Restart a Machine",
                "description": "Restart a Machine",
                "operationId": "machineRestartOperation",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/machines/{id}/operations/revert": {
            "post": {
                "tags": [
                    "Compute"
                ],
                "summary": "Revert to a Snapshot of Machine",
                "description": "Revert to a Snapshot of Machine",
                "operationId": "machineRevertSnapshotOperation",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Snapshot id to revert.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/machines/{id}/operations/shutdown": {
            "post": {
                "tags": [
                    "Compute"
                ],
                "summary": "Shut down a Machine",
                "description": "Shut down a Machine",
                "operationId": "machineShutdownOperation",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/machines/{id}/operations/snapshots": {
            "post": {
                "tags": [
                    "Compute"
                ],
                "summary": "Create Snapshot of Machine",
                "description": "Create Snapshot of Machine",
                "operationId": "machineCreateSnapshotOperation",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Snapshot Specification details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/machines/{id}/operations/suspend": {
            "post": {
                "tags": [
                    "Compute"
                ],
                "summary": "Suspend a Machine",
                "description": "Suspend a Machine",
                "operationId": "machineSuspendOperation",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/machines/{id}/snapshots": {
            "get": {
                "tags": [
                    "Compute"
                ],
                "summary": "Get Snapshots information for machine",
                "description": "Get Snapshots information for machine",
                "operationId": "getSnapshotsForMachine",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Snapshot"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/machines/{id}/snapshots/{id1}": {
            "delete": {
                "tags": [
                    "Compute"
                ],
                "summary": "Delete a Snapshot",
                "description": "Delete a Snapshot",
                "operationId": "machineDeleteSnapshotOperation",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Machine.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id1",
                        "in": "path",
                        "description": "Snapshot id to delete.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/network-domains": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Domains",
                "description": "Get a page of Network Domains.",
                "operationId": "getNetworkDomains",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NetworkDomainResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/network-domains/{id}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Describe a Network Domain",
                "description": "Describe a Network Domain.",
                "operationId": "describeNetworkDomain",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the network domain.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NetworkDomain"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/network-profiles": {
            "get": {
                "tags": [
                    "Network Profile"
                ],
                "summary": "Get NetworkProfiles",
                "description": "Get all network profiles.",
                "operationId": "getNetworkProfiles",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "regionId",
                        "in": "query",
                        "description": "The internal id of the region for which this entity is defined. This is the id property of the Region object retrieved through /iaas/api/regions. Within an entity, the regionId can be obtained as the last path segment of the _links.region.href property",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NetworkProfileResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Network Profile"
                ],
                "summary": "Create NetworkProfile",
                "description": "Create a new NetworkProfile.",
                "operationId": "createNetworkProfile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "NetworkProfile instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkProfileSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NetworkProfile"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/network-profiles/{id}": {
            "get": {
                "tags": [
                    "Network Profile"
                ],
                "summary": "Get NetworkProfile",
                "description": "Get a single NetworkProfile.",
                "operationId": "getNetworkProfile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the network profile.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NetworkProfile"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Network Profile"
                ],
                "summary": "Delete NetworkProfile",
                "description": "Delete a single NetworkProfile.",
                "operationId": "deleteNetworkProfile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the network profile.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Network Profile"
                ],
                "summary": "Update NetworkProfile",
                "description": "Update an existing NetworkProfile.",
                "operationId": "updateNetworkProfile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the network profile.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "NetworkProfile specification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkProfileSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NetworkProfile"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/networks": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Networks",
                "description": "Get a page of network content.",
                "operationId": "getNetworks",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NetworkResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Create Network",
                "description": "Provision a new network based on the passed in constraints.  The network should be destroyed after the machine is destroyed to free up resources.",
                "operationId": "createNetwork",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Network Specification instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/networks/{id}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Describe a Network",
                "description": "Describe a network.",
                "operationId": "describeNetwork",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the network.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Network"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete a Network",
                "description": "Delete a network.",
                "operationId": "deleteNetwork",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the network.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/projects": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Get Projects",
                "description": "Get all Projects.",
                "operationId": "getProjects",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ProjectResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Project"
                ],
                "summary": "Create Project",
                "description": "Create a new Project.",
                "operationId": "createProject",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Project Specification instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProjectSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/projects/{id}": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Get Project",
                "description": "Get a single Project.",
                "operationId": "getProject",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the project.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project"
                ],
                "summary": "Delete a Project",
                "description": "Delete a Project.",
                "operationId": "deleteProject",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the project.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Project"
                ],
                "summary": "Update Project",
                "description": "Update a Project.",
                "operationId": "updateProject",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the project.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Project specification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProjectSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/regions": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get Region",
                "description": "Get all regions.",
                "operationId": "getRegion",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RegionResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/regions/{id}": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get a Single Region",
                "description": "Get a single Region.",
                "operationId": "getSingleRegion",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the region.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Region"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/request-tracker": {
            "get": {
                "tags": [
                    "Request"
                ],
                "summary": "Get Request",
                "description": "Get all Requests.",
                "operationId": "getRequest",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RequestTrackerResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/request-tracker/{id}": {
            "get": {
                "tags": [
                    "Request"
                ],
                "summary": "Describe a Request",
                "description": "Describe a Request.",
                "operationId": "describeRequest",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the request.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/security-groups": {
            "get": {
                "tags": [
                    "Security Group"
                ],
                "summary": "Get Security Groups",
                "description": "Get a page of Security Groups.",
                "operationId": "getSecurityGroups",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SecurityGroupResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/security-groups/{id}": {
            "get": {
                "tags": [
                    "Security Group"
                ],
                "summary": "Describe a Security Group",
                "description": "Describe a Security Group.",
                "operationId": "describeSecurityGroup",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the security group.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SecurityGroup"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/storage-profiles": {
            "get": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Get Storage profiles",
                "description": "Get all storage profiles.",
                "operationId": "getStorageProfiles",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "regionId",
                        "in": "query",
                        "description": "The internal id of the region for which this entity is defined. This is the id property of the Region object retrieved through /iaas/api/regions. Within an entity, the regionId can be obtained as the last path segment of the _links.region.href property",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/StorageProfileResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Create Storage Profile",
                "description": "Create a new Storage Profile.",
                "operationId": "createStorageProfile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileSpecification instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StorageProfileSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/StorageProfile"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/storage-profiles-aws": {
            "get": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Get AWS Storage profiles",
                "description": "Get all AWS storage profiles.",
                "operationId": "getAwsStorageProfiles",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/StorageProfileAwsResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Create AWS Storage Profile",
                "description": "Create a new AWS Storage Profile.",
                "operationId": "createStorageProfileForAWS",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileAwsSpecification instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StorageProfileAwsSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AwsStorageProfile"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/storage-profiles-aws/{id}": {
            "get": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Get AWS StorageProfile",
                "description": "Get a single AWS StorageProfile.",
                "operationId": "getAwsStorageProfile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of storage profile.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AwsStorageProfile"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Delete AWS StorageProfile",
                "description": "Delete a single AWS StorageProfile.",
                "operationId": "deleteAwsStorageProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the storage profile.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Update AWS StorageProfile",
                "description": "Update AWS StorageProfile.",
                "operationId": "updateAwsStorageProfile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the storage profile.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileAwsSpecification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StorageProfileAwsSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AwsStorageProfile"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/storage-profiles-azure": {
            "get": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Get Azure Storage profiles",
                "description": "Get all Azure storage profiles.",
                "operationId": "getAzureStorageProfiles",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/StorageProfileAzureResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Create Azure Storage Profile",
                "description": "Create a new Azure Storage Profile.",
                "operationId": "createStorageProfileForAzure",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileAzureSpecification instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StorageProfileAzureSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AzureStorageProfile"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/storage-profiles-azure/{id}": {
            "get": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Get Azure StorageProfile",
                "description": "Get a single Azure StorageProfile.",
                "operationId": "getAzureStorageProfile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of storage profile.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AzureStorageProfile"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Delete Azure StorageProfile",
                "description": "Delete a single Azure StorageProfile.",
                "operationId": "deleteAzureStorageProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the storage profile.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Update Azure StorageProfile",
                "description": "Update Azure StorageProfile",
                "operationId": "updateAzureStorageProfile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the storage profile.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileAzureSpecification instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StorageProfileAzureSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AzureStorageProfile"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/storage-profiles-vsphere": {
            "get": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Get vSphere Storage profiles",
                "description": "Get all vSphere storage profiles.",
                "operationId": "getVSphereStorageProfiles",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/StorageProfileVsphereResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Create vSphere Storage Profile",
                "description": "Create a new vSphere Storage Profile.",
                "operationId": "createStorageProfileForVsphere",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileVsphereSpecification instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StorageProfileVsphereSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/VsphereStorageProfile"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/storage-profiles-vsphere/{id}": {
            "get": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Get vSphere StorageProfile",
                "description": "Get a single vSphere StorageProfile.",
                "operationId": "getVSphereStorageProfile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of storage profile.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/VsphereStorageProfile"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Delete vSphere StorageProfile",
                "description": "Delete a single vSphere StorageProfile.",
                "operationId": "deleteVSphereStorageProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the storage profile.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Update vSphere StorageProfile",
                "description": "Update vSphere StorageProfile",
                "operationId": "updateVSphereStorageProfile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the storage profile.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileVsphereSpecification instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StorageProfileVsphereSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/VsphereStorageProfile"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/storage-profiles/{id}": {
            "get": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Get StorageProfile",
                "description": "Get a single StorageProfile.",
                "operationId": "getStorageProfile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of storage profile.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/StorageProfile"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Update StorageProfile",
                "description": "Update StorageProfile.",
                "operationId": "updateStorageProfile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the storage profile.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileSpecification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StorageProfileSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/StorageProfile"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Storage Profile"
                ],
                "summary": "Delete StorageProfile",
                "description": "Delete a single StorageProfile.",
                "operationId": "deleteStorageProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the storage profile.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iaas/api/zones": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get Zone",
                "description": "Get all zones",
                "operationId": "getZone",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "regionId",
                        "in": "query",
                        "description": "The internal id of the region for which this entity is defined. This is the id property of the Region object retrieved through /iaas/api/regions. Within an entity, the regionId can be obtained as the last path segment of the _links.region.href property",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ZoneResult"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Location"
                ],
                "summary": "Create Zone",
                "description": "Create a new Zone.",
                "operationId": "createZone",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Zone specification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ZoneSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Zone"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/iaas/api/zones/{id}": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get a Single Zone.",
                "description": "Get a single Zone.",
                "operationId": "getSingleZone",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the zone.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Zone"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Location"
                ],
                "summary": "Delete a Zone",
                "description": "Delete a Zone",
                "operationId": "deleteZone",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the zone.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Location"
                ],
                "summary": "Update Zone",
                "description": "Update a Zone.",
                "operationId": "updateZone",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the zone.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Zone specification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ZoneSpecification"
                        }
                    },
                    {
                        "name": "apiVersion",
                        "in": "query",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Zone"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        }
    },
    "definitions": {
        "About": {
            "type": "object",
            "required": [
                "latestApiVersion",
                "supportedApis"
            ],
            "properties": {
                "supportedApis": {
                    "type": "array",
                    "description": "A collection of all currently supported api versions.",
                    "items": {
                        "$ref": "#/definitions/ApiDescription"
                    }
                },
                "latestApiVersion": {
                    "type": "string",
                    "description": "The latest version of the API in yyyy-MM-dd format (UTC)."
                }
            },
            "description": "State object representing an about page that includes api versioning information"
        },
        "ApiDescription": {
            "type": "object",
            "required": [
                "apiVersion",
                "documentationLink"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "description": "The version of the API in yyyy-MM-dd format (UTC)."
                },
                "documentationLink": {
                    "type": "string",
                    "description": "The link to the documentation of this api version"
                },
                "deprecationPolicy": {
                    "description": "The deprecation policy may contain information whether the api is in deprecated state and when it expires.",
                    "$ref": "#/definitions/DeprecationPolicy"
                }
            }
        },
        "AuthResponse": {
            "type": "object",
            "required": [
                "token",
                "tokenType"
            ],
            "properties": {
                "tokenType": {
                    "type": "string",
                    "example": "Bearer",
                    "description": "Type of the token."
                },
                "token": {
                    "type": "string",
                    "description": "Base64 encoded auth token."
                }
            },
            "description": "Entity that holds auth token details."
        },
        "AwsStorageProfile": {
            "type": "object",
            "required": [
                "_links",
                "defaultItem",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "defaultItem": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates whether this storage profile is default or not.."
                },
                "supportsEncryption": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates whether this storage profile supports encryption or not."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]",
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "deviceType": {
                    "type": "string",
                    "example": "ebs / instance-store",
                    "description": "Indicates the type of storage device."
                },
                "volumeType": {
                    "type": "string",
                    "example": "gp2 / io1 / sc1 / st1 / standard",
                    "description": "Indicates the type of volume associated with type of storage device."
                },
                "iops": {
                    "type": "string",
                    "example": "2000",
                    "description": "Indicates maximum I/O operations per second in range(1-20,000)."
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "us-east-1",
                    "description": "The id of the region for which this profile is defined"
                }
            },
            "description": "Defines a structure that holds list of storage policies defined for AWS for a specific region.**HATEOAS** links:<br>**region** - Region - Region for the profile.<br>**self** - AwsStorageProfile - Self link to this aws Storage Profile"
        },
        "AzureStorageProfile": {
            "type": "object",
            "required": [
                "_links",
                "defaultItem",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "defaultItem": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if a storage profile contains default storage properties."
                },
                "supportsEncryption": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates whether this storage profile should support encryption or not."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]",
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "diskType": {
                    "type": "string",
                    "example": "Standard_LRS / Premium_LRS",
                    "description": "Indicates the performance tier for the storage type. Premium disks are SSD backed and Standard disks are HDD backed."
                },
                "osDiskCaching": {
                    "type": "string",
                    "example": "None / ReadOnly / ReadWrite",
                    "description": "Indicates the caching mechanism for OS disk. Default policy for OS disks is Read/Write."
                },
                "dataDiskCaching": {
                    "type": "string",
                    "example": "None / ReadOnly / ReadWrite",
                    "description": "Indicates the caching mechanism for additional disk. "
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "uswest",
                    "description": "The id of the region for which this profile is defined"
                }
            },
            "description": "Defines a structure that holds list of storage policies defined for Azure for a specific region.**HATEOAS** links:<br>**storage-account** - FabricAzureStorageAccount - Storage account for the profile.<br>**region** - Region - Region for the profile.<br>**self** - AzureStorageProfile - Self link to this Azure storage profile."
        },
        "BlockDevice": {
            "type": "object",
            "required": [
                "_links",
                "capacityInGB",
                "externalRegionId",
                "externalZoneId",
                "id",
                "status"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "externalId": {
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2",
                    "description": "External entity Id on the provider side."
                },
                "projectId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the project this entity belongs to."
                },
                "externalZoneId": {
                    "type": "string",
                    "example": "us-east-1a",
                    "description": "The external zoneId of the resource."
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "us-east-1",
                    "description": "The external regionId of the resource"
                },
                "capacityInGB": {
                    "type": "integer",
                    "format": "int32",
                    "example": 10,
                    "description": "Capacity of the block device in GB."
                },
                "status": {
                    "type": "string",
                    "example": "ATTACHED",
                    "description": "Status of the block device",
                    "enum": [
                        "DETACHED",
                        "ATTACHED",
                        "AVAILABLE"
                    ]
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"vmware.enumeration.type\", \"value\": \"nebs_block\" } ]",
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"volumeType\" : \"gp2\" }",
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "description": "State object representing a block device.<br>**HATEOAS** links:<br>**cloud-accounts** - array[CloudAccount] - Cloud accounts where this disk is provisioned.<br>**self** - BlockDevice - Self link to this block device"
        },
        "BlockDeviceResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BlockDevice"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of block device."
        },
        "BlockDeviceSpecification": {
            "type": "object",
            "required": [
                "capacityInGB",
                "name",
                "projectId"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "projectId": {
                    "type": "string",
                    "example": "e058",
                    "description": "The id of the project the current user belongs to."
                },
                "capacityInGB": {
                    "type": "integer",
                    "format": "int32",
                    "example": 78,
                    "description": "Capacity of the block device in GB."
                },
                "encrypted": {
                    "type": "boolean",
                    "example": true,
                    "description": "Indicates whether the block device should be encrypted or not."
                },
                "sourceReference": {
                    "type": "string",
                    "example": "ami-0d4cfd66",
                    "description": "Reference to URI using which the block device has to be created."
                },
                "diskContentBase64": {
                    "type": "string",
                    "example": "dGVzdA",
                    "description": "Content of a disk, base64 encoded."
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"key\" : \"type\", \"value\": \"HDD\" }",
                    "description": "Additional custom properties that may be used toextend the block device.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "constraints": {
                    "type": "array",
                    "example": "[ { \"mandatory\" : \"true\", \"expression\": \"environment\":\"prod\"}, {\"mandatory\" : \"false\", \"floor\": \"3rd\"} ]",
                    "description": "Constraints that are used to drive placement policies for the block device that is produced from this specification. Constraint expressions are matched against tags on existing placement targets.",
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    }
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"location\", \"value\": \"SOF\" } ]",
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }
            }
        },
        "CloudAccount": {
            "type": "object",
            "required": [
                "_links",
                "cloudAccountProperties",
                "cloudAccountType",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "cloudAccountType": {
                    "type": "string",
                    "example": "vsphere, aws, azure, nsxv, nsxt",
                    "description": "Cloud account type"
                },
                "cloudAccountProperties": {
                    "type": "object",
                    "example": "{ \"hostName\": \"vcenter.mycompany.com\" }",
                    "description": "Cloud account specific properties",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "enabledRegionIds": {
                    "type": "array",
                    "example": "[ \"us-east-1\", \"ap-northeast-1\" ]",
                    "description": "A set of region names to enable provisioning on.",
                    "items": {
                        "type": "string"
                    }
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }",
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]",
                    "description": "A set of tag keys and optional values that were set on the Cloud Account",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }
            },
            "description": "State object representing a cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**associated-cloud-accounts** - array[CloudAccount] - Cloud accounts associated to this cloud account. For example an NSX endpoint linked to a vSphere cloud account.<br>**regions** - array[Region] - List of regions that are enabled for this cloud account.<br>**self** - CloudAccount - Self link to this cloud account"
        },
        "CloudAccountAws": {
            "type": "object",
            "required": [
                "_links",
                "accessKeyId",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "accessKeyId": {
                    "type": "string",
                    "example": "KLIKJ7EA4PPDZR7T7Z6K",
                    "description": "Access key id for Aws."
                },
                "enabledRegionIds": {
                    "type": "array",
                    "example": "[ \"us-east-1\", \"ap-northeast-1\" ]",
                    "description": "A set of region names that are enabled for this  cloud account.",
                    "items": {
                        "type": "string"
                    }
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }",
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]",
                    "description": "A set of tag keys and optional values that were set on the Cloud Account",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }
            },
            "description": "State object representing a AWS cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**regions** - array[Region] - List of regions that are enabled for this cloud account.<br>**self** - CloudAccountAws - Self link to this cloud account"
        },
        "CloudAccountAwsResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CloudAccountAws"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of Aws cloud accounts."
        },
        "CloudAccountAwsSpecification": {
            "type": "object",
            "required": [
                "accessKeyId",
                "name",
                "secretAccessKey"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "accessKeyId": {
                    "type": "string",
                    "example": "ACDC55DB4MFH6ADG75KK",
                    "description": "Aws Access key ID"
                },
                "secretAccessKey": {
                    "type": "string",
                    "example": "gfsScK345sGGaVdds222dasdfDDSSasdfdsa34fS",
                    "description": "Aws Secret Access Key"
                },
                "regionIds": {
                    "type": "array",
                    "example": "[ \"us-east-1\", \"ap-northeast-1\" ]",
                    "description": "A set of Region names to enable provisioning on. Refer to /iaas/cloud-accounts-aws/region-enumeration..",
                    "items": {
                        "type": "string"
                    }
                },
                "createDefaultZones": {
                    "type": "boolean",
                    "example": true,
                    "description": "Create default cloud zones for the enabled regions."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]",
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }
            },
            "description": "Specification for a Amazon cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted."
        },
        "CloudAccountAzure": {
            "type": "object",
            "required": [
                "_links",
                "clientApplicationId",
                "id",
                "subscriptionId",
                "tenantId"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "subscriptionId": {
                    "type": "string",
                    "example": "f3c86a85-e379-42ae-a8ba-7a51382d6dd7",
                    "description": "Azure Subscription IDaccount. "
                },
                "tenantId": {
                    "type": "string",
                    "example": "027f73d5-0a19-452e-9d45-775693421508",
                    "description": "Azure Tenant Idaccount. "
                },
                "clientApplicationId": {
                    "type": "string",
                    "example": "66f277f2-ff12-4c3a-a4c9-b13d131a9a4d",
                    "description": "Azure Client Application IDaccount. "
                },
                "enabledRegionIds": {
                    "type": "array",
                    "example": "[ \"us-east-1\", \"ap-northeast-1\" ]",
                    "description": "A set of region names that are enabled for this  cloud account.",
                    "items": {
                        "type": "string"
                    }
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }",
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]",
                    "description": "A set of tag keys and optional values that were set on on the Cloud Account",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }
            },
            "description": "State object representing an Azure cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**regions** - array[Region] - List of regions that are enabled for this cloud account.<br>**self** - CloudAccountAzure - Self link to this cloud account"
        },
        "CloudAccountAzureResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CloudAccountAzure"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of Azure cloud accounts."
        },
        "CloudAccountAzureSpecification": {
            "type": "object",
            "required": [
                "clientApplicationId",
                "clientApplicationSecretKey",
                "name",
                "subscriptionId",
                "tenantId"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "subscriptionId": {
                    "type": "string",
                    "example": "064865b2-e914-4717-b415-8806d17948f7",
                    "description": "Azure Subscribtion ID"
                },
                "tenantId": {
                    "type": "string",
                    "example": "9a13d920-4691-4e2d-b5d5-9c4c1279bc9a",
                    "description": "Azure Tenant ID"
                },
                "clientApplicationId": {
                    "type": "string",
                    "example": "3287dd6e-76d8-41b7-9856-2584969e7739",
                    "description": "Azure Client Application ID"
                },
                "clientApplicationSecretKey": {
                    "type": "string",
                    "example": "GDfdasDasdASFas321das32cas2x3dsXCSA76xdcasg=",
                    "description": "Azure Client Application Secret Key"
                },
                "regionIds": {
                    "type": "array",
                    "example": "[ \"East US\", \"North Europe\" ]",
                    "description": "A set of Region names to enable provisioning on. Refer to /iaas/cloud-accounts-azure/region-enumeration..",
                    "items": {
                        "type": "string"
                    }
                },
                "createDefaultZones": {
                    "type": "boolean",
                    "example": true,
                    "description": "Create default cloud zones for the enabled regions."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]",
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }
            },
            "description": "Specification for a Azure cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted."
        },
        "CloudAccountNsxT": {
            "type": "object",
            "required": [
                "_links",
                "hostName",
                "id",
                "username"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "hostName": {
                    "type": "string",
                    "example": "nsxt.vmware.com",
                    "description": "Host name for the Nsx-T cloud account"
                },
                "dcid": {
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4",
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure."
                },
                "username": {
                    "type": "string",
                    "example": "administrator@mycompany.com",
                    "description": "Username to authenticate with the cloud account"
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }",
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]",
                    "description": "A set of tag keys and optional values that were set on the Cloud Account",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }
            },
            "description": "State object representing an Nsx-T cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**self** - CloudAccountNsxT - Self link to this cloud account"
        },
        "CloudAccountNsxTResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CloudAccountNsxT"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of Nsx-T cloud accounts."
        },
        "CloudAccountNsxTSpecification": {
            "type": "object",
            "required": [
                "hostName",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "hostName": {
                    "type": "string",
                    "example": "nsxt.mycompany.com",
                    "description": "Host name for the Nsx-T endpoint"
                },
                "dcid": {
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4",
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors"
                },
                "username": {
                    "type": "string",
                    "example": "administrator@mycompany.com",
                    "description": "Username to authenticate with the cloud account"
                },
                "password": {
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh",
                    "description": "Password for the user used to authenticate with the cloud Account"
                },
                "acceptSelfSignedCertificate": {
                    "type": "boolean",
                    "example": false,
                    "description": "Accept self signed certificate when connecting."
                },
                "createDefaultZones": {
                    "type": "boolean",
                    "example": true,
                    "description": "Create default cloud zones for the enabled regions."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]",
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }
            },
            "description": "Specification for an Nsx-T cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted."
        },
        "CloudAccountNsxV": {
            "type": "object",
            "required": [
                "_links",
                "hostName",
                "id",
                "username"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "hostName": {
                    "type": "string",
                    "example": "nsxv.vmware.com",
                    "description": "Host name for the Nsx-V cloud account"
                },
                "dcid": {
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4",
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure."
                },
                "username": {
                    "type": "string",
                    "example": "administrator@mycompany.com",
                    "description": "Username to authenticate with the cloud account"
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }",
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]",
                    "description": "A set of tag keys and optional values that were set on the Cloud Account",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }
            },
            "description": "State object representing an Nsx-V cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**self** - CloudAccountNsxV - Self link to this cloud account"
        },
        "CloudAccountNsxVResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CloudAccountNsxV"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of Nsx-V cloud accounts."
        },
        "CloudAccountNsxVSpecification": {
            "type": "object",
            "required": [
                "hostName",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "hostName": {
                    "type": "string",
                    "example": "nsxv.mycompany.com",
                    "description": "Host name for the Nsx-T endpoint"
                },
                "dcid": {
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4",
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors"
                },
                "username": {
                    "type": "string",
                    "example": "administrator@mycompany.com",
                    "description": "Username to authenticate with the cloud account"
                },
                "password": {
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh",
                    "description": "Password for the user used to authenticate with the cloud Account"
                },
                "acceptSelfSignedCertificate": {
                    "type": "boolean",
                    "example": false,
                    "description": "Accept self signed certificate when connecting."
                },
                "createDefaultZones": {
                    "type": "boolean",
                    "example": true,
                    "description": "Create default cloud zones for the enabled regions."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]",
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }
            },
            "description": "Specification for an Nsx-V cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted."
        },
        "CloudAccountRegions": {
            "type": "object",
            "required": [
                "externalRegionIds"
            ],
            "properties": {
                "externalRegionIds": {
                    "type": "array",
                    "example": "[ \"us-east-1\", \"ap-northeast-1\" ]",
                    "description": "A set of region ids for the cloud account.",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "description": "State object representing a cloud account region."
        },
        "CloudAccountResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CloudAccount"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of cloud accounts."
        },
        "CloudAccountSpecification": {
            "type": "object",
            "required": [
                "cloudAccountProperties",
                "cloudAccountType",
                "name",
                "privateKey",
                "privateKeyId"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "cloudAccountType": {
                    "type": "string",
                    "example": "vsphere, aws, azure, nsxv, nsxt",
                    "description": "Cloud account type"
                },
                "privateKeyId": {
                    "type": "string",
                    "example": "ACDC55DB4MFH6ADG75KK",
                    "description": "Access key id or username to be used to authenticate with the cloud account"
                },
                "privateKey": {
                    "type": "string",
                    "example": "gfsScK345sGGaVdds222dasdfDDSSasdfdsa34fS",
                    "description": "Secret access key or password to be used to authenticate with the cloud account"
                },
                "associatedCloudAccountIds": {
                    "type": "array",
                    "example": "[ \"42f3e0d199d134755684cd935435a\" ]",
                    "description": "Cloud account to link with this cloud account",
                    "items": {
                        "type": "string"
                    }
                },
                "cloudAccountProperties": {
                    "type": "object",
                    "example": "{ \"Azure\": \"azureTenantId\", \"vSphere\": \"hostName\", \"acceptSelfSignedCertificate\" : \"true\" }",
                    "description": "Cloud Account specific properties supplied in as name value pairs",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"dcId\" : \"0e597dcc-09d5-4b44-98\" }",
                    "description": "Additional custom properties that may be used toextend the Cloud Account.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "regionIds": {
                    "type": "array",
                    "example": "[ \"us-east-1\", \"ap-northeast-1\" ]",
                    "description": "A set of Region names to enable provisioning on.Refer to /iaas/cloud-accounts/region-enumeration.",
                    "items": {
                        "type": "string"
                    }
                },
                "createDefaultZones": {
                    "type": "boolean",
                    "example": true,
                    "description": "Create default cloud zones for the enabled regions."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]",
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }
            },
            "description": "Specification for a generic cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted."
        },
        "CloudAccountVsphere": {
            "type": "object",
            "required": [
                "_links",
                "hostName",
                "id",
                "username"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "hostName": {
                    "type": "string",
                    "example": "vc1.vmware.com",
                    "description": "Host name for the vSphere cloud account"
                },
                "dcid": {
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4",
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure."
                },
                "username": {
                    "type": "string",
                    "example": "administrator@mycompany.com",
                    "description": "Username to authenticate with the cloud account"
                },
                "enabledRegionIds": {
                    "type": "array",
                    "example": "[ \"us-east-1\", \"ap-northeast-1\" ]",
                    "description": "A set of region names that are enabled for this  cloud account.",
                    "items": {
                        "type": "string"
                    }
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }",
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]",
                    "description": "A set of tag keys and optional values that were set on the Cloud Account",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }
            },
            "description": "State object representing a vSphere cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**regions** - array[Region] - List of regions that are enabled for this cloud account.<br>**self** - CloudAccountVsphere - Self link to this cloud account."
        },
        "CloudAccountVsphereResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CloudAccountVsphere"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of vSphere cloud accounts."
        },
        "CloudAccountVsphereSpecification": {
            "type": "object",
            "required": [
                "hostName",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "hostName": {
                    "type": "string",
                    "example": "vc.mycompany.com",
                    "description": "Host name for the vSphere endpoint"
                },
                "acceptSelfSignedCertificate": {
                    "type": "boolean",
                    "example": false,
                    "description": "Accept self signed certificate when connecting to vSphere"
                },
                "associatedCloudAccountIds": {
                    "type": "array",
                    "example": "[ \"42f3e0d199d134755684cd935435a\" ]",
                    "description": "Cloud accounts to associate with this cloud account",
                    "items": {
                        "type": "string"
                    }
                },
                "dcid": {
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4",
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors"
                },
                "username": {
                    "type": "string",
                    "example": "administrator@mycompany.com",
                    "description": "Username to authenticate with the cloud account"
                },
                "password": {
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh",
                    "description": "Password for the user used to authenticate with the cloud Account"
                },
                "regionIds": {
                    "type": "array",
                    "example": "[ \"Datacenter:datacenter-2\" ]",
                    "description": "A set of datacenter managed object reference identifiers (MoRef) to enable provisioning on. Refer to /iaas/cloud-accounts-vsphere/region-enumeration.",
                    "items": {
                        "type": "string"
                    }
                },
                "createDefaultZones": {
                    "type": "boolean",
                    "example": true,
                    "description": "Create default cloud zones for the enabled regions."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]",
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }
            },
            "description": "Specification for a vSphere cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted."
        },
        "Constraint": {
            "type": "object",
            "required": [
                "expression",
                "mandatory"
            ],
            "properties": {
                "mandatory": {
                    "type": "boolean",
                    "description": "Indicates whether this constraint should be strictly enforced or not."
                },
                "expression": {
                    "type": "string",
                    "example": "ha:strong",
                    "description": "An expression of the form \"[!]tag-key[:[tag-value]]\", used to indicate a constraint match on keys and values of tags.\n"
                }
            },
            "description": "A constraint that is conveyed to the policy engine."
        },
        "CspLoginSpecification": {
            "type": "object",
            "required": [
                "refreshToken"
            ],
            "properties": {
                "host": {
                    "type": "string",
                    "example": "my-machine.mycompany.com, 10.0.0.5",
                    "description": "Hostname or ip of machine"
                },
                "refreshToken": {
                    "type": "string",
                    "example": "5e7c2c-9a9e-4b0-9339-a7f94",
                    "description": "Refresh token obtained from the UI"
                }
            },
            "description": "Specification for token retrieval request."
        },
        "DataCollector": {
            "type": "object",
            "required": [
                "dcId",
                "hostName",
                "ipAddress",
                "name",
                "status"
            ],
            "properties": {
                "dcId": {
                    "type": "string",
                    "example": "d5316b00-f3b8-4895-9e9a-c4b98649c2ca",
                    "description": "Data collector identifier"
                },
                "ipAddress": {
                    "type": "string",
                    "example": "10.0.0.1",
                    "description": "Ip Address of the data collector VM"
                },
                "name": {
                    "type": "string",
                    "example": "Datacollector1",
                    "description": "Data collector name"
                },
                "hostName": {
                    "type": "string",
                    "example": "dc1-lnd.mycompany.com",
                    "description": "Data collector host name"
                },
                "status": {
                    "type": "string",
                    "example": "ACTIVE, INACTIVE",
                    "description": "Current status of the data collector"
                }
            },
            "description": "State object representing a data collector.<br>The data collector is an OVA tool that contains the credentials and protocols needed to create a connection between a data collector appliance on a host vCenter and a vCenter-based cloud account."
        },
        "DataCollectorRegistration": {
            "type": "object",
            "required": [
                "key",
                "ovaLink"
            ],
            "properties": {
                "ovaLink": {
                    "type": "string",
                    "example": "https://ci-data-collector.s3.amazonaws.com/VMware-Cloud-Services-Data-Collector.ova",
                    "description": "Data collector OVA Link"
                },
                "key": {
                    "type": "string",
                    "example": "eyJyZWdpc3RyYXRpb25VcmwiOiJodHRwczovL2Fw",
                    "description": "A registration key for the data collector"
                }
            },
            "description": "Data collector registration object.<br>The supplied data collector is an OVA tool that contains the credentials and protocols needed to create a connection between a data collector appliance on a host vCenter and a vCenter-based cloud account. . The process of deploying data collector is: <br> 1. Download the data collector ova from the \"ovaLink\".<br>2. Import the .ova file to the vCenter Server and start the installation.<br> 3. When asked for the key, copy and use the \"key\" provided.<br> 4. It takes a few minutes to detect your Data Collector after it is deployed and powered on in vCenter."
        },
        "DataCollectorResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/DataCollector"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of data collectors."
        },
        "DeprecationPolicy": {
            "type": "object",
            "properties": {
                "deprecatedAt": {
                    "type": "string",
                    "description": "The date the api was deprecated in yyyy-MM-dd format (UTC). Could be empty if the api is not deprecated."
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The date the api support will be dropped in yyyy-MM-dd format (UTC). The api may still be available for use after that date but this is not guaranteed."
                },
                "description": {
                    "type": "string",
                    "description": "A free text description that contains information about why this api is deprecated and how to migrate to a newer version."
                }
            }
        },
        "DiskAttachmentSpecification": {
            "type": "object",
            "required": [
                "blockDeviceId",
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "blockDeviceId": {
                    "type": "string",
                    "example": "1298765",
                    "description": "The id of the existing block device"
                }
            },
            "description": "Specification for attaching disk to a machine"
        },
        "FabricAzureStorageAccount": {
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "externalId": {
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2",
                    "description": "External entity Id on the provider side."
                },
                "type": {
                    "type": "string",
                    "example": "Standard_LRS / Premium_LRS",
                    "description": "Indicates the performance tier for the storage type. Premium disks are SSD backed and Standard disks are HDD backed."
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "westus",
                    "description": "Indicates the ID of region."
                }
            },
            "description": "Represents a structure that holds details of Azure endpoint's storage account.<br>**HATEOAS** links:<br>**region** - Region - Region for the storage account.<br>**self** - FabricAzureStorageAccount - Self link to this storage account"
        },
        "FabricAzureStorageAccountResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/FabricAzureStorageAccount"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of Azure storage accounts."
        },
        "FabricFlavor": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "i3.large",
                    "description": "The internal identification used by the corresponding cloud end-point"
                },
                "name": {
                    "type": "string",
                    "example": "i3.large",
                    "description": "The value of the instance type in the corresponding cloud."
                },
                "cpuCount": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2,
                    "description": "Number of CPU cores. Not populated when inapplicable."
                },
                "memoryInMB": {
                    "type": "integer",
                    "format": "int64",
                    "example": 15616,
                    "description": "Total amount of memory (in megabytes). Not populated when inapplicable."
                },
                "storageType": {
                    "type": "string",
                    "example": "NVMe_SSD",
                    "description": "The type of storage supported by this instance type. Not populated when inapplicable."
                },
                "bootDiskSizeInMB": {
                    "type": "integer",
                    "format": "int32",
                    "example": 486400,
                    "description": "Size of the boot disk (in megabytes). Not populated when inapplicable."
                },
                "dataDiskSizeInMB": {
                    "type": "integer",
                    "format": "int32",
                    "example": 486400,
                    "description": "Size of the data disks (in megabytes). Not populated when inapplicable."
                },
                "dataDiskMaxCount": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "description": "Number of data disks. Not populated when inapplicable."
                },
                "networkType": {
                    "type": "string",
                    "example": "Up to 10 Gigabit",
                    "description": "The type of network supported by this instance type. Not populated when inapplicable."
                }
            },
            "description": "Represents a fabric flavor from the corresponding cloud end-point"
        },
        "FabricFlavorDescription": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "t2.small, t2.medium",
                    "description": "The value of the instance type in the corresponding cloud. Valid and mandatory for public clouds"
                },
                "cpuCount": {
                    "type": "integer",
                    "format": "int32",
                    "example": 4,
                    "description": "Number of CPU cores. Mandatory for private clouds such as vSphere. Not populated when inapplicable."
                },
                "memoryInMB": {
                    "type": "integer",
                    "format": "int64",
                    "example": 4096,
                    "description": "Total amount of memory (in megabytes). Mandatory for private clouds such as vSphere. Not populated when inapplicable."
                }
            },
            "description": "Represents fabric flavor instance type description. Used when creating flavor profiles."
        },
        "FabricFlavorResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/FabricFlavor"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of fabric flavors."
        },
        "FabricImage": {
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "externalId": {
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2",
                    "description": "External entity Id on the provider side."
                },
                "osFamily": {
                    "type": "string",
                    "example": "linux, win",
                    "description": "Operating System family of the image."
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "us-east-1",
                    "description": "The regionId of the image"
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"prop1\" : \"value1\" }",
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "isPrivate": {
                    "type": "boolean",
                    "example": true,
                    "description": "Indicates whether this fabric image is private. For vSphere, private images are considered to be templates and snapshots and public are Content Library Items"
                }
            },
            "description": "Represents a fabric image from the corresponding cloud end-point.<br>**HATEOAS** links:<br>**region** - Region - Region for the image.<br>**self** - FabricImage - Self link to this image"
        },
        "FabricImageDescription": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the fabric image"
                },
                "name": {
                    "type": "string",
                    "example": "ami-ubuntu-16.04-1.9.1-00-1516139717",
                    "description": "Fabric image name. Valid if id not provided."
                },
                "cloudConfig": {
                    "type": "string",
                    "example": "runcmd:\n  - [\"mkdir\", \"/imageFolder\"]",
                    "description": "Cloud config for this image. This cloud config will be merged during provisioning with other cloud configurations such as the bootConfig provided in MachineSpecification."
                }
            },
            "description": "Represents fabric image description. Used when creating image profiles."
        },
        "FabricImageResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/FabricImage"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of fabric images."
        },
        "FabricNetwork": {
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "externalId": {
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2",
                    "description": "External entity Id on the provider side."
                },
                "isPublic": {
                    "type": "boolean",
                    "description": "Indicates whether the sub-network supports public IP assignment."
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Indicates whether this is the default subnet for the zone."
                },
                "cidr": {
                    "type": "string",
                    "example": "10.1.2.0/24",
                    "description": "Network CIDR to be used."
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "us-east-1",
                    "description": "The id of the region for which this network is defined"
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"fast-network\", \"value\": \"true\" } ]",
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }
            },
            "description": "State object representing a network on a external cloud provider.<br>**HATEOAS** links:<br>**region** - Region - Region for the network.<br>**self** - FabricNetwork - Self link to this network"
        },
        "FabricNetworkResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/FabricNetwork"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of fabric networks."
        },
        "FabricNetworkSpecification": {
            "type": "object",
            "properties": {
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"fast-network\", \"value\": \"true\" } ]",
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }
            },
            "description": "Specification for updating a FabricNetwork"
        },
        "FabricVsphereDatastore": {
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "externalId": {
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2",
                    "description": "External entity Id on the provider side."
                },
                "type": {
                    "type": "string",
                    "example": "VMFS / NFS / StoragePod",
                    "description": "Type of datastore."
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "Datacenter:datacenter-2",
                    "description": "Id of datacenter in which the datastore is present."
                },
                "freeSizeGB": {
                    "type": "string",
                    "example": "20",
                    "description": "Indicates free size available in datastore."
                }
            },
            "description": "Represents a structure that holds details of vSphere datastore.<br>**HATEOAS** links:<br>**self** - FabricVsphereDatastore - Self link to this data store"
        },
        "FabricVsphereDatastoreResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/FabricVsphereDatastore"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of vSphere datastores."
        },
        "FabricVsphereStoragePolicy": {
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "externalId": {
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2",
                    "description": "External entity Id on the provider side."
                }
            },
            "description": "Represents a structure that holds details of vSphere storage policy.**HATEOAS** links:<br>**self** - FabricVsphereStoragePolicy - Self link to this storage policy"
        },
        "FabricVsphereStoragePolicyResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/FabricVsphereStoragePolicy"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of vSphere storage policies."
        },
        "FlavorMapping": {
            "type": "object",
            "required": [
                "_links",
                "mapping"
            ],
            "properties": {
                "mapping": {
                    "type": "object",
                    "example": "{ \"small\": { \"name\": \"t2.small\", \"cpuCount\": \"1\", \"MemoryInMb\": \"2048\", \"storageType\": \"EBS\", \"networkType\": \"Low to Moderate\"} }",
                    "description": "Flavors defined for the particular region. Keyed by global flavor key.",
                    "additionalProperties": {
                        "$ref": "#/definitions/FabricFlavor"
                    }
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "us-east-1",
                    "description": "The id of the region for which this mapping is defined."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                }
            },
            "description": "Describes a flavor mapping between a global fabric flavor key and fabric flavor.<br>**HATEOAS** links:<br>**region** - Region - Region for the mapping."
        },
        "FlavorProfile": {
            "type": "object",
            "required": [
                "_links",
                "flavorMappings",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "flavorMappings": {
                    "description": "A list of the flavor mappings defined for the corresponding cloud end-point region",
                    "$ref": "#/definitions/FlavorMapping"
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "us-east-1",
                    "description": "The id of the region for which this profile is defined"
                }
            },
            "description": "Represents a structure that holds flavor mappings defined for the corresponding cloud end-point region.<br>**HATEOAS** links:<br>**region** - Region - Region for the profile.<br>**self** - FlavorProfile - Self link to this flavor profile"
        },
        "FlavorProfileResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/FlavorProfile"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of flavor profiles."
        },
        "FlavorProfileSpecification": {
            "type": "object",
            "required": [
                "flavorMapping",
                "name",
                "regionId"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "flavorMapping": {
                    "type": "object",
                    "example": "{ \"small\": { \"name\": \"t2.small\" }, \"medium\": { \"name\": \"t2.medium\"}}, \"vSphere_small\": { \"cpuCount\": \"2\", \"memoryMb\": \"2048\"}, \"vSphere_medium\": { \"cpuCount\": \"4\", \"memoryMb\": \"4096\"}}",
                    "description": "Map between global fabric flavor keys <String> and fabric flavor descriptions <FabricFlavorDescription> ",
                    "additionalProperties": {
                        "$ref": "#/definitions/FabricFlavorDescription"
                    }
                },
                "regionId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the region for which this profile is created"
                }
            },
            "description": "Specification for flavor profile"
        },
        "FlavorResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/FlavorMapping"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of falvor mappings."
        },
        "HealthCheckConfiguration": {
            "type": "object",
            "required": [
                "port",
                "protocol"
            ],
            "properties": {
                "protocol": {
                    "type": "string",
                    "example": "HTTP, HTTPS",
                    "description": "The protocol used for the health check."
                },
                "port": {
                    "type": "string",
                    "example": "80",
                    "description": "Port on the back-end instance machine to use for the health check."
                },
                "urlPath": {
                    "type": "string",
                    "example": "/index.html",
                    "description": "URL path on the back-end instance against which a request will be performed for the health check. Useful when the health check protocol is HTTP/HTTPS."
                },
                "intervalSeconds": {
                    "type": "integer",
                    "format": "int32",
                    "example": 60,
                    "description": "Interval (in seconds) at which the health checks will be performed."
                },
                "timeoutSeconds": {
                    "type": "integer",
                    "format": "int32",
                    "example": 5,
                    "description": "Timeout (in seconds) to wait for a response from the back-end instance."
                },
                "unhealthyThreshold": {
                    "type": "integer",
                    "format": "int32",
                    "example": 5,
                    "description": "Number of consecutive check failures before considering a particular back-end instance as unhealthy."
                },
                "healthyThreshold": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2,
                    "description": "Number of consecutive successful checks before considering a particular back-end instance as healthy."
                }
            },
            "description": "Load balancer health check configuration."
        },
        "Href": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                },
                "hrefs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ImageMapping": {
            "type": "object",
            "required": [
                "_links",
                "mapping"
            ],
            "properties": {
                "mapping": {
                    "type": "object",
                    "example": "{ \"ubuntu\" : {\"externalRegionId\": \"us-east-1\", \"externalId\": \"ami-2c7b5656\", \"name\": \"ami-ubuntu-16.04\", \"description\": \"instance-store - HVM - supports - UTF-8 - tools\"} }",
                    "description": "Image mapping defined for the particular region.",
                    "additionalProperties": {
                        "$ref": "#/definitions/ImageMappingDescription"
                    }
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "us-east-1",
                    "description": "The id of the region for which this mapping is defined."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                }
            },
            "description": "Describes an image mapping between image key and fabric image.<br>**HATEOAS** links:<br>**region** - Region - Region for the mapping."
        },
        "ImageMappingDescription": {
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "externalId": {
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2",
                    "description": "External entity Id on the provider side."
                },
                "osFamily": {
                    "type": "string",
                    "example": "linux, win",
                    "description": "Operating System family of the image."
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "us-east-1",
                    "description": "The regionId of the image"
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"prop1\" : \"value1\" }",
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "isPrivate": {
                    "type": "boolean",
                    "example": true,
                    "description": "Indicates whether this fabric image is private. For vSphere, private images are considered to be templates and snapshots and public are Content Library Items"
                },
                "cloudConfig": {
                    "type": "string",
                    "example": "runcmd:\n  - [\"mkdir\", \"/imageFolder\"]",
                    "description": "Cloud config for this image. This cloud config will be merged during provisioning with other cloud configurations such as the bootConfig provided in MachineSpecification."
                }
            },
            "description": "Represents a fabric image from the corresponding cloud end-point with additional cloud configuration script that will be executed on provisioning"
        },
        "ImageProfile": {
            "type": "object",
            "required": [
                "_links",
                "id",
                "imageMappings"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "imageMappings": {
                    "description": "A list of the image mappings defined for the particular region",
                    "$ref": "#/definitions/ImageMapping"
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "us-east-1",
                    "description": "The id of the region for which this profile is defined"
                }
            },
            "description": "Represents a structure that holds a list of image mappings defined for the particular region.<br>**HATEOAS** links:<br>**region** - Region - Region for the profile.<br>**self** - ImageProfile - Self link to this image profile"
        },
        "ImageProfileResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ImageProfile"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of image profiles."
        },
        "ImageProfileSpecification": {
            "type": "object",
            "required": [
                "imageMapping",
                "name",
                "regionId"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "imageMapping": {
                    "type": "object",
                    "example": "{ \"ubuntu\": { \"id\": \"9e49\", \"name\": \"ami-ubuntu-16.04-1.9.1-00-1516139717\"}, \"coreos\": { \"id\": \"9e50\", \"name\": \"ami-coreos-26.04-1.9.1-00-543254235\"}}",
                    "description": "Image mapping defined for the corresponding region.",
                    "additionalProperties": {
                        "$ref": "#/definitions/FabricImageDescription"
                    }
                },
                "regionId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the region for which this profile is created"
                }
            },
            "description": "Specification for image profile. "
        },
        "ImageResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ImageMapping"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of image mappings."
        },
        "LoadBalancer": {
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "externalZoneId",
                "id",
                "routes"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "externalId": {
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2",
                    "description": "External entity Id on the provider side."
                },
                "projectId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the project this entity belongs to."
                },
                "externalZoneId": {
                    "type": "string",
                    "example": "us-east-1a",
                    "description": "The external zoneId of the resource."
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "us-east-1",
                    "description": "The external regionId of the resource"
                },
                "address": {
                    "type": "string",
                    "example": "lb-123456789.eu-west-1.elb.amazonaws.com",
                    "description": "Primary address allocated or in use by this load balancer. The address could be an in the form of a publicly resolvable DNS name or an IP address. "
                },
                "routes": {
                    "type": "array",
                    "description": "The load balancer route configuration regarding ports and protocols.",
                    "items": {
                        "$ref": "#/definitions/RouteConfiguration"
                    }
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]",
                    "description": "A set of tag keys and optional values that were set on this load balancer.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"property\" : \"value\" }",
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "description": "Represents a load balancer.<br>**HATEOAS** links:<br>**load-balancer-targets** - array[Machine] - List of load balancer target machines.<br>**cloud-account** - CloudAccount - Cloud account where this LB is deployed.<br>**self** - LoadBalancer - Self link to this load balancer"
        },
        "LoadBalancerResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/LoadBalancer"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of load balancecrs."
        },
        "LoadBalancerSpecification": {
            "type": "object",
            "required": [
                "name",
                "nics",
                "projectId",
                "routes"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "projectId": {
                    "type": "string",
                    "example": "e058",
                    "description": "The id of the project the current user belongs to."
                },
                "routes": {
                    "type": "array",
                    "description": "The load balancer route configuration regarding ports and protocols.",
                    "items": {
                        "$ref": "#/definitions/RouteConfiguration"
                    }
                },
                "nics": {
                    "type": "array",
                    "description": "A set of network interface specifications for this load balancer.",
                    "items": {
                        "$ref": "#/definitions/NetworkInterfaceSpecification"
                    }
                },
                "targetLinks": {
                    "type": "array",
                    "example": "[ \"/iaas/machines/eac3d\" ]",
                    "description": "A list of links to target load balancer pool members. Links can be to either a machine or a machine's network interface.",
                    "items": {
                        "type": "string"
                    }
                },
                "customProperties": {
                    "type": "object",
                    "description": "Additional custom properties that may be used to extend the load balancer.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]",
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "internetFacing": {
                    "type": "boolean",
                    "description": "An Internet-facing load balancer has a publicly resolvable DNS name, so it can route requests from clients over the Internet to the instances that are registered with the load balancer."
                }
            },
            "description": "Load balancer configuration."
        },
        "Machine": {
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "externalZoneId",
                "id",
                "powerState"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "externalId": {
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2",
                    "description": "External entity Id on the provider side."
                },
                "projectId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the project this entity belongs to."
                },
                "externalZoneId": {
                    "type": "string",
                    "example": "us-east-1a",
                    "description": "The external zoneId of the resource."
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "us-east-1",
                    "description": "The external regionId of the resource"
                },
                "powerState": {
                    "type": "string",
                    "example": "ON, OFF",
                    "description": "Power state of machine.",
                    "enum": [
                        "ON",
                        "OFF",
                        "GUEST_OFF",
                        "UNKNOWN",
                        "SUSPEND"
                    ]
                },
                "address": {
                    "type": "string",
                    "example": "34.242.21.5",
                    "description": "Primary address allocated or in use by this machine. The actual type of the address depends on the adapter type. Typically it is either the public or the external IP address."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]",
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"osType\" : \"LINUX\" }",
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "description": "Represents a cloud agnostic machine.<br>**HATEOAS** links:<br>**operations** - array[String] - Supported operations for the machine.<br>**network-interfaces** - array[NetworkInterface] - Network interfaces for the machine.<br>**disks** - array[MachineDisk] - disks for the machine.<br>**deployment** - Deployment - Deployment that this machine is part of.<br>**cloud-accounts** - array[CloudAccount] - Cloud accounts where this machine is provisioned.<br>**self** - Machine - Self link to this machine"
        },
        "MachineBootConfig": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "#cloud-config\nrepo_update: true\nrepo_upgrade: all\n\npackages:\n - mysql-server\n\nruncmd:\n - sed -e '/bind-address/ s/^#*/#/' -i /etc/mysql/mysql.conf.d/mysqld.cnf\n - service mysql restart\n - mysql -e \"GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'mysqlpassword';\"\n - mysql -e \"FLUSH PRIVILEGES;\"\n",
                    "description": "A valid cloud config data in json-escaped yaml syntax"
                }
            },
            "description": "Machine boot config that will be passed to the instance that can be used to perform common automated configuration tasks and even run scripts after the instance starts."
        },
        "MachineResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Machine"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of machines."
        },
        "MachineSpecification": {
            "type": "object",
            "required": [
                "flavor",
                "image",
                "imageRef",
                "name",
                "projectId"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "projectId": {
                    "type": "string",
                    "example": "e058",
                    "description": "The id of the project the current user belongs to."
                },
                "flavor": {
                    "type": "string",
                    "example": "small, medium, large",
                    "description": "Flavor of machine instance."
                },
                "image": {
                    "type": "string",
                    "example": "vmware-gold-master, ubuntu-latest, rhel-compliant, windows",
                    "description": "Type of image used for this machine."
                },
                "imageRef": {
                    "type": "string",
                    "example": "ami-f6795a8c",
                    "description": "Direct image reference used for this machine (name, path, location, uri, etc.). Valid if no image property is provided"
                },
                "nics": {
                    "type": "array",
                    "description": "A set of network interface controller specifications for this machine. If not specified, then a default network connection will be created.",
                    "items": {
                        "$ref": "#/definitions/NetworkInterfaceSpecification"
                    }
                },
                "disks": {
                    "type": "array",
                    "description": "A set of disk specifications for this machine.",
                    "items": {
                        "$ref": "#/definitions/DiskAttachmentSpecification"
                    }
                },
                "bootConfig": {
                    "description": "A valid cloud config data in json-escaped yaml syntax",
                    "$ref": "#/definitions/MachineBootConfig"
                },
                "machineCount": {
                    "type": "integer",
                    "format": "int32",
                    "example": 3,
                    "description": "Number of machines to provision - default 1."
                },
                "constraints": {
                    "type": "array",
                    "example": "[{\"mandatory\" : \"true\", \"expression\": \"environment\":\"prod\"}, {\"mandatory\" : \"false\", \"expression\": \"pci\"}]",
                    "description": "Constraints that are used to drive placement policies for the virtual machine that is produced from this specification. Constraint expressions are matched against tags on existing placement targets.",
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    }
                },
                "imageDiskConstraints": {
                    "type": "array",
                    "example": "[{\"mandatory\" : \"true\", \"expression\": \"environment:prod\"}, {\"mandatory\" : \"false\", \"expression\": \"pci\"}]",
                    "description": "Constraints that are used to drive placement policies for the image disk. Constraint expressions are matched against tags on existing placement targets.",
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    }
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]",
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "customProperties": {
                    "type": "object",
                    "description": "Additional custom properties that may be used toextend the machine.",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "description": "Specification for a cloud agnostic machine."
        },
        "Network": {
            "type": "object",
            "required": [
                "_links",
                "cidr",
                "externalRegionId",
                "externalZoneId",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "externalId": {
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2",
                    "description": "External entity Id on the provider side."
                },
                "projectId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the project this entity belongs to."
                },
                "externalZoneId": {
                    "type": "string",
                    "example": "us-east-1a",
                    "description": "The external zoneId of the resource."
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "us-east-1",
                    "description": "The external regionId of the resource"
                },
                "cidr": {
                    "type": "string",
                    "example": "10.10.0.0/16",
                    "description": "IPv4 address range of the network in CIDR format"
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"vmware.enumeration.type\", \"value\": \"nec2_vpc\" } ]",
                    "description": "A set of tag keys and optional values that were set on this network.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"awsGatewayID\" : \"igw-b9d3cedc\" }",
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "description": "The network object is an opaque reference to a logical network that network interfaces are attached to.<br>\nBased on settings specified by your cloud administrator, it may be a reference to an existing network, or be backed by an on-demand network created for isolation, or a security group that will be attached to machines as part of provisioning.<br>\nNetworks are a limited resource, when it is not needed it should be deleted.<br>**HATEOAS** links:<br>**self** - Network - Self link to this network"
        },
        "NetworkDomain": {
            "type": "object",
            "required": [
                "_links",
                "cidr",
                "externalRegionId",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "externalId": {
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2",
                    "description": "External entity Id on the provider side."
                },
                "cidr": {
                    "type": "string",
                    "example": "10.0.0.0/8",
                    "description": "IPv4 address range of the network domain in CIDR format"
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "ap-northeast-2",
                    "description": "The external regionId of the network domain."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"vmware.enumeration.type\", \"value\": \"nec2_vpc\" } ]",
                    "description": "A set of tag keys and optional values that were set on this network domain.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"awsGatewayID\" : \"igw-f9539691\" }",
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "description": "The network domain object is the parent of related subnets that are configured together. Subnets within a domain must have non-overlapping address spaces.<br>**HATEOAS** links:<br>**cloud-accounts** - array[CloudAccount] - List of cloud accounts where this network domain exists.<br>**self** - NetworkDomain - Self link to this network domain"
        },
        "NetworkDomainResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/NetworkDomain"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of network domains."
        },
        "NetworkInterface": {
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "externalId": {
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2",
                    "description": "External entity Id on the provider side."
                },
                "deviceIndex": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "description": "The device index of this network interface."
                },
                "addresses": {
                    "type": "array",
                    "example": "[ \"10.1.2.190\" ]",
                    "description": "A list of IP addresses allocated or in use by this network interface.",
                    "items": {
                        "type": "string"
                    }
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "ap-northeast-2",
                    "description": "The external regionId of the network interface."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"vmware.enumeration.type\", \"value\": \"nec2_net_interface\" } ]",
                    "description": "A set of tag keys and optional values that were set on this network interface.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"awaitIp\" : \"true\" }",
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "description": "Represents a network interface.<br>**HATEOAS** links:<br>**cloud-accounts** - array[CloudAccount] - List of cloud accounts where this network domain exists.<br>**security-groups** - array[SecurityGroup] - List of security groups for this network interface.<br>**self** - NetworkInterface - Self link to this network interface"
        },
        "NetworkInterfaceSpecification": {
            "type": "object",
            "required": [
                "name",
                "networkId"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "deviceIndex": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "description": "The device index of this network interface."
                },
                "networkId": {
                    "type": "string",
                    "example": "dcd9",
                    "description": "Id of the network instance that this network interface plugs into."
                },
                "addresses": {
                    "type": "array",
                    "example": "[ \"10.1.2.190\" ]",
                    "description": "A list of IP addresses allocated or in use by this network interface.",
                    "items": {
                        "type": "string"
                    }
                },
                "securityGroupIds": {
                    "type": "array",
                    "description": "A list of security group ids which this network interface will be assigned to.",
                    "items": {
                        "type": "string"
                    }
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"awaitIp\" : \"true\" }",
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "description": "Specification for attaching nic to machine"
        },
        "NetworkProfile": {
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "us-east-1",
                    "description": "The id of the region for which this profile is defined"
                },
                "isolationType": {
                    "type": "string",
                    "description": "Specifies the isolation type e.g. none, subnet or security group",
                    "enum": [
                        "NONE",
                        "SUBNET",
                        "SECURITY_GROUP"
                    ]
                },
                "isolationNetworkDomainCIDR": {
                    "type": "string",
                    "description": "CIDR of the isolation network domain."
                },
                "isolatedNetworkCIDRPrefix": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The CIDR prefix length to be used for the isolated networks that are created with the network profile."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]",
                    "description": "A set of tag keys and optional values that were set on this Network Profile.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"resourcePoolId\" : \"resource-pool-1\" }",
                    "description": "Additional properties that may be used to extend the Network Profile object.",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "description": "Represents a network Profile.<br>**HATEOAS** links:<br>**fabric-networks** - array[FabricNetwork] - Fabric networks defined in this profile.<br>**security-groups** - array[SecurityGroup] - List of security groups for this profile.<br>**network-domains** - array[NetworkDomain] - List of network domains for this profile.<br>**isolated-external-fabric-networks** - array[FabricNetwork] - Isolated external fabric networks in this profile.<br>**self** - NetowrkProfile - Self link to this network profile"
        },
        "NetworkProfileResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/NetworkProfile"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of network profiles."
        },
        "NetworkProfileSpecification": {
            "type": "object",
            "required": [
                "name",
                "regionId"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "fabricNetworkIds": {
                    "type": "array",
                    "example": "[ \"6543\" ]",
                    "description": "A list of fabric network Ids which are assigned to the network profile.",
                    "items": {
                        "type": "string"
                    }
                },
                "securityGroupIds": {
                    "type": "array",
                    "example": "[ \"6545\" ]",
                    "description": "A list of security group Ids which are assigned to the network profile.",
                    "items": {
                        "type": "string"
                    }
                },
                "regionId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The Id of the region for which this profile is created"
                },
                "isolationType": {
                    "type": "string",
                    "example": "SUBNET",
                    "description": "Specifies the isolation type e.g. none, subnet or security group",
                    "enum": [
                        "NONE",
                        "SUBNET",
                        "SECURITY_GROUP"
                    ]
                },
                "isolationNetworkDomainId": {
                    "type": "string",
                    "example": "1234",
                    "description": "The Id of the network domain used for creating isolated networks."
                },
                "isolationNetworkDomainCIDR": {
                    "type": "string",
                    "example": "10.10.10.0/24",
                    "description": "CIDR of the isolation network domain."
                },
                "isolationExternalFabricNetworkId": {
                    "type": "string",
                    "example": "1234",
                    "description": "The Id of the fabric network used for outbound access."
                },
                "isolatedNetworkCIDRPrefix": {
                    "type": "integer",
                    "format": "int32",
                    "example": 24,
                    "description": "The CIDR prefix length to be used for the isolated networks that are created with the network profile."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"dev\", \"value\": \"hard\" } ]",
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "customProperties": {
                    "type": "object",
                    "example": "{ \"resourcePoolId\" : \"resource-pool-1\" }",
                    "description": "Additional properties that may be used to extend the Network Profile object that is produced from this specification.",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "NetworkResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Network"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of networks."
        },
        "NetworkSpecification": {
            "type": "object",
            "required": [
                "name",
                "projectId"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "projectId": {
                    "type": "string",
                    "example": "e058",
                    "description": "The id of the project the current user belongs to."
                },
                "constraints": {
                    "type": "array",
                    "example": "[{\"mandatory\" : \"true\", \"expression\": \"environment\":\"prod\"}, {\"mandatory\" : \"false\", \"expression\": \"pci\"}]",
                    "description": "Constraints that are used to drive placement policies for the network that is produced from this specification, related with the network profile. Constraint expressions are matched against tags on existing placement targets.",
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    }
                },
                "customProperties": {
                    "type": "object",
                    "description": "Additional custom properties that may be used toextend the network.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"vmware.enumeration.type\", \"value\": \"nec2_vpc\" } ]",
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "outboundAccess": {
                    "type": "boolean",
                    "example": true,
                    "description": "Flag to indicate if the network needs to have outbound access or not. Default is true."
                }
            },
            "description": "Specification for a cloud network"
        },
        "Project": {
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "administrators": {
                    "type": "array",
                    "example": "[ { \"email\":\"administrator@vmware.com\" } ]",
                    "description": "List of administrator users associated with the project. Only administrators can manage project's configuration.",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                },
                "members": {
                    "type": "array",
                    "example": "[ { \"email\":\"member@vmware.com\" } ]",
                    "description": "List of member users associated with the project. ",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                },
                "zones": {
                    "type": "array",
                    "description": "List of Cloud Zones assigned to this project. You can limit deployment to a single region or allow multi-region placement by adding more than one cloud zone to a project. A cloud zone lists available resources. Use tags on resources to control workload placement.",
                    "items": {
                        "$ref": "#/definitions/ZoneAssignmentConfig"
                    }
                },
                "operationTimeout": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The timeout that should be used for Blueprint operations and Provisioning tasks. The timeout is in seconds"
                }
            },
            "description": "Projects link users and cloud zones, thus controlling who can use what cloud resources.<br>**HATEOAS** links:<br>**self** - Project - Self link to this project"
        },
        "ProjectResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Project"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of projects."
        },
        "ProjectSpecification": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "administrators": {
                    "type": "array",
                    "example": "[{ \"email\":\"administrator@vmware.com\" }]",
                    "description": "List of administrator users associated with the project. Only administrators can manage project's configuration.",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                },
                "members": {
                    "type": "array",
                    "example": "[{ \"email\":\"member@vmware.com\" }]",
                    "description": "List of member users associated with the project. ",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                },
                "zoneAssignmentConfigurations": {
                    "type": "array",
                    "description": "List of configurations for zone assignment to a project.",
                    "items": {
                        "$ref": "#/definitions/ZoneAssignmentConfig"
                    }
                },
                "operationTimeout": {
                    "type": "integer",
                    "format": "int64",
                    "example": 30,
                    "description": "The timeout that should be used for Blueprint operations and Provisioning tasks. The timeout is in seconds"
                }
            },
            "description": "Represents a specification for a project."
        },
        "Region": {
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "us-west",
                    "description": "Unique identifier of region on the provider side."
                }
            },
            "description": "State object representing a region in a cloud account.<br>**HATEOAS** links:<br>**cloud-account** - CloudAccount - Cloud account for the region.**self** - Region - Self link to this region"
        },
        "RegionResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Region"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of regions."
        },
        "RequestTracker": {
            "type": "object",
            "required": [
                "id",
                "progress",
                "selfLink",
                "status"
            ],
            "properties": {
                "progress": {
                    "type": "integer",
                    "format": "int32",
                    "example": 90,
                    "description": "Progress of the request as percentage."
                },
                "message": {
                    "type": "string",
                    "example": "In Progress",
                    "description": "Status message of the request."
                },
                "status": {
                    "type": "string",
                    "example": "FINISHED",
                    "description": "Status of the request.",
                    "enum": [
                        "FINISHED",
                        "INPROGRESS",
                        "FAILED"
                    ]
                },
                "resources": {
                    "type": "array",
                    "example": "[\"/machines/i-0be3655a12fd28e8e\", \"/machines/i-0be234a15ft8det3\"]",
                    "description": "Collection of resources.",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "Power-off",
                    "description": "Name of the operation."
                },
                "id": {
                    "type": "string",
                    "example": "we655aew4e8e",
                    "description": "ID of this request."
                },
                "selfLink": {
                    "type": "string",
                    "example": "/.../request-tracker/we655aew4e8e",
                    "description": "Self link of this request."
                }
            },
            "description": "An object used to track long-running operations."
        },
        "RequestTrackerResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/RequestTracker"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of request tracker objects."
        },
        "RouteConfiguration": {
            "type": "object",
            "required": [
                "memberPort",
                "memberProtocol",
                "port",
                "protocol"
            ],
            "properties": {
                "protocol": {
                    "type": "string",
                    "example": "TCP, UDP",
                    "description": "The protocol of the incoming load balancer requests."
                },
                "port": {
                    "type": "string",
                    "example": "80",
                    "description": "Port which the load balancer is listening to."
                },
                "memberProtocol": {
                    "type": "string",
                    "example": "TCP, UDP",
                    "description": "The protocol of the member traffic."
                },
                "memberPort": {
                    "type": "string",
                    "example": "80",
                    "description": "Member port where the traffic is routed to."
                },
                "healthCheckConfiguration": {
                    "description": "Health check configuration for this route configuration.",
                    "$ref": "#/definitions/HealthCheckConfiguration"
                }
            },
            "description": "Load balancer route configuration."
        },
        "Rule": {
            "type": "object",
            "required": [
                "access",
                "ipRangeCidr",
                "ports",
                "protocol"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "5756f7e2",
                    "description": "Name of security rule."
                },
                "protocol": {
                    "type": "string",
                    "example": "TCP, UDP",
                    "description": "Protocol the security rule applies to."
                },
                "ipRangeCidr": {
                    "type": "string",
                    "example": "66.170.99.2/32",
                    "description": "IP address(es) in CIDR format which the security rule applies to."
                },
                "ports": {
                    "type": "string",
                    "example": "443, 1-655535",
                    "description": "Ports the security rule applies to."
                },
                "access": {
                    "type": "string",
                    "example": "Allow",
                    "description": "Type of access (allow or deny) for the security rule. Traffic that does not match any rules will be denied.",
                    "enum": [
                        "Allow",
                        "Deny"
                    ]
                }
            },
            "description": "A rule used in a security group."
        },
        "SecurityGroup": {
            "type": "object",
            "required": [
                "_links",
                "egress",
                "externalRegionId",
                "id",
                "ingress"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "externalId": {
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2",
                    "description": "External entity Id on the provider side."
                },
                "ingress": {
                    "type": "array",
                    "description": "List of ingress security rules.",
                    "items": {
                        "$ref": "#/definitions/Rule"
                    }
                },
                "egress": {
                    "type": "array",
                    "description": "List of egress security rules.",
                    "items": {
                        "$ref": "#/definitions/Rule"
                    }
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "ap-northeast-2",
                    "description": "The external regionId of the security group."
                }
            },
            "description": "State object representing a security group.<br>**HATEOAS** links:<br>**cloud-accounts** - array[CloudAccount] - List of cloud accounts where this security group exists.<br>**self** - SecurityGroup - Self link to this security group"
        },
        "SecurityGroupResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SecurityGroup"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of security groups."
        },
        "Snapshot": {
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                }
            },
            "description": "Represents a machine snapshot"
        },
        "SnapshotSpecification": {
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "snapshotMemory": {
                    "type": "boolean",
                    "description": "Captures the full state of a running virtual machine, including the memory."
                }
            }
        },
        "StorageProfile": {
            "type": "object",
            "required": [
                "_links",
                "defaultItem",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "defaultItem": {
                    "type": "boolean",
                    "description": "Indicates if a storage profile is default profile or not."
                },
                "supportsEncryption": {
                    "type": "boolean",
                    "description": "Indicates whether this storage profile supports encryption or not."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]",
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "diskProperties": {
                    "type": "object",
                    "example": "{ \"diskProperties\": {\n                    \"provisioningType\": \"thin\",\n                    \"sharesLevel\": \"low\",\n                    \"shares\": \"500\",\n                    \"limitIops\": \"500\"\n                } }",
                    "description": "Map of storage properties that are to be applied on disk while provisioning.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "us-east-1",
                    "description": "The id of the region for which this profile is defined"
                }
            },
            "description": "Represents a structure that holds details of storage profile linked to a cloud zone / region.**HATEOAS** links:<br>**region** - Region - Region for the profile.<br>**self** - StorageProfile - Self link to this storage profile.<br>**datastore** - FabricVsphereDatastore - Datastore of this storage profile.<br>**storage-policy** - FabricVsphereStoragePolicy - vSphere storage policy for this profile.<br> **storage-account** - FabricAzureStorageAccount - Azure storage account for this profile.<br>"
        },
        "StorageProfileAwsResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/AwsStorageProfile"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of Aws storage profiles."
        },
        "StorageProfileAwsSpecification": {
            "type": "object",
            "required": [
                "defaultItem",
                "name",
                "regionId"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "defaultItem": {
                    "type": "boolean",
                    "example": true,
                    "description": "Indicates if a storage profile is default or not."
                },
                "supportsEncryption": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates whether this storage profile supports encryption or not."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]",
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "deviceType": {
                    "type": "string",
                    "example": "ebs / instance-store",
                    "description": "Indicates the type of storage."
                },
                "volumeType": {
                    "type": "string",
                    "example": "gp2 / io1 / sc1 / st1 / standard",
                    "description": "Indicates the type of volume associated with type of storage."
                },
                "iops": {
                    "type": "string",
                    "example": "2000",
                    "description": "Indicates maximum I/O operations per second in range(1-20,000)."
                },
                "regionId": {
                    "type": "string",
                    "example": "31186",
                    "description": "A link to the region that is associated with the storage profile."
                }
            },
            "description": "Represents a specification of AWS storage profile."
        },
        "StorageProfileAzureResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/AzureStorageProfile"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of Azure storage profiles."
        },
        "StorageProfileAzureSpecification": {
            "type": "object",
            "required": [
                "defaultItem",
                "name",
                "regionId"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "defaultItem": {
                    "type": "boolean",
                    "example": true,
                    "description": "Indicates if a storage policy contains default storage properties."
                },
                "supportsEncryption": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates whether this storage policy should support encryption or not."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]",
                    "description": "A set of tag keys and optional values for a storage policy which define set of specifications for creating a disk.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "diskType": {
                    "type": "string",
                    "example": "Standard_LRS / Premium_LRS",
                    "description": "Indicates the performance tier for the storage type. Premium disks are SSD backed and Standard disks are HDD backed."
                },
                "osDiskCaching": {
                    "type": "string",
                    "example": "None / ReadOnly / ReadWrite",
                    "description": "Indicates the caching mechanism for OS disk. Default policy for OS disks is Read/Write."
                },
                "dataDiskCaching": {
                    "type": "string",
                    "example": "None / ReadOnly / ReadWrite",
                    "description": "Indicates the caching mechanism for additional disk. "
                },
                "storageAccountId": {
                    "type": "string",
                    "example": "aaa82",
                    "description": "Id of a storage account where in the disk is placed."
                },
                "regionId": {
                    "type": "string",
                    "example": "31186",
                    "description": "The If of the region that is associated with the storage profile."
                }
            },
            "description": "Represents a specification of Azure storage profile."
        },
        "StorageProfileResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/StorageProfile"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of storage profiles."
        },
        "StorageProfileSpecification": {
            "type": "object",
            "required": [
                "defaultItem",
                "name",
                "regionId"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "defaultItem": {
                    "type": "boolean",
                    "description": "Indicates if a storage profile is a default profile."
                },
                "supportsEncryption": {
                    "type": "boolean",
                    "description": "Indicates whether this storage profile supports encryption or not."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]",
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "diskProperties": {
                    "type": "object",
                    "example": "{ \"diskProperties\": {\n                    \"provisioningType\": \"thin\",\n                    \"sharesLevel\": \"low\",\n                    \"shares\": \"500\",\n                    \"limitIops\": \"500\"\n                } }",
                    "description": "Map of storage properties that are to be applied on disk while provisioning.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "diskTargetProperties": {
                    "type": "object",
                    "example": "{ \"diskTargetProperties\": {\n                    \"storageAccountId\": \"27dhbf7\",\n                    \"storagePolicyId\": \"7fhfj9f\",\n                    \"datastoreId\": \"638nfjd8\",\n                } }",
                    "description": "Map of storage placements to know where the disk is provisioned.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "regionId": {
                    "type": "string",
                    "example": "31186",
                    "description": "The Id of the region that is associated with the storage profile."
                }
            },
            "description": "Represents a specification of generic storage profile."
        },
        "StorageProfileVsphereResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/VsphereStorageProfile"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of vShpere storage profiles."
        },
        "StorageProfileVsphereSpecification": {
            "type": "object",
            "required": [
                "defaultItem",
                "name",
                "regionId"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "defaultItem": {
                    "type": "boolean",
                    "example": true,
                    "description": "Indicates if a storage profile acts as a default storage profile for a disk."
                },
                "supportsEncryption": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates whether this storage profile supports encryption or not."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]",
                    "description": "A list of tags that represent the capabilities of this storage profile.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "datastoreId": {
                    "type": "string",
                    "example": "08d28",
                    "description": "Id of the vSphere Datastore for placing disk and VM."
                },
                "storagePolicyId": {
                    "type": "string",
                    "example": "6b59743af31d",
                    "description": "Id of the vSphere Storage Policy to be applied."
                },
                "provisioningType": {
                    "type": "string",
                    "example": "thin / thick / eagerZeroedThick",
                    "description": "Type of provisioning policy for the disk."
                },
                "sharesLevel": {
                    "type": "string",
                    "example": "low / normal / high / custom",
                    "description": "Shares are specified as High, Normal, Low or Custom and these values specify share values with a 4:2:1 ratio, respectively. "
                },
                "shares": {
                    "type": "string",
                    "example": "2000",
                    "description": "A specific number of shares assigned to each virtual machine."
                },
                "limitIops": {
                    "type": "string",
                    "example": "1000",
                    "description": "The upper bound for the I/O operations per second allocated for each virtual disk."
                },
                "diskMode": {
                    "type": "string",
                    "example": "undefined / independent-persistent / independent-nonpersistent",
                    "description": "Type of mode for the disk"
                },
                "regionId": {
                    "type": "string",
                    "example": "31186",
                    "description": "The Id of the region that is associated with the storage profile."
                }
            },
            "description": "Represents a specification of vSphere storage profile."
        },
        "Tag": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Tag's key."
                },
                "value": {
                    "type": "string",
                    "description": "Tag's value."
                }
            }
        },
        "User": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "administrator@vmware.com",
                    "description": "The email of the user."
                }
            },
            "description": "A representation of a user."
        },
        "VolumeTypeList": {
            "type": "object",
            "properties": {
                "volumeTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "VsphereStorageProfile": {
            "type": "object",
            "required": [
                "_links",
                "defaultItem",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "defaultItem": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if a storage profile contains default storage properties."
                },
                "supportsEncryption": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates whether this storage profile should support encryption or not."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]",
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "provisioningType": {
                    "type": "string",
                    "example": "thin / thick / eagerZeroedThick",
                    "description": "Type of format for the disk."
                },
                "sharesLevel": {
                    "type": "string",
                    "example": "low / normal / high / custom",
                    "description": "Shares level are specified as High, Normal, Low or Custom."
                },
                "shares": {
                    "type": "string",
                    "example": "2000",
                    "description": "A specific number of shares assigned to each virtual machine."
                },
                "limitIops": {
                    "type": "string",
                    "example": "1000",
                    "description": "The upper bound for the I/O operations per second allocated for each disk."
                },
                "diskMode": {
                    "type": "string",
                    "example": "undefined / independent-persistent / independent-nonpersistent",
                    "description": "Type of mode for the disk"
                },
                "externalRegionId": {
                    "type": "string",
                    "example": "Datacenter:datacenter-2",
                    "description": "The id of the region for which this profile is defined"
                }
            },
            "description": "Defines a structure that holds storage profile details defined for vSphere for a specific region.**HATEOAS** links:<br>**datastore** - FabricVsphereDatastore - Datastore for this storage profile.<br>**storage-policy** - FabricVsphereStoragePolicy - vSphere storage policy for this storage profile.<br> **region** - Region - Region for the profile.<br>**self** - VsphereStorageProfile - Self link to this vSphere storage profile."
        },
        "Zone": {
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of this resource instance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC."
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2012-09-27",
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC."
                },
                "owner": {
                    "type": "string",
                    "example": "csp@vmware.com",
                    "description": "Email of the user that owns the entity."
                },
                "organizationId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the organization this entity belongs to."
                },
                "_links": {
                    "type": "object",
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-name",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "example": "my-description",
                    "description": "A human-friendly description."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"dev\", \"value\": \" \" } ]",
                    "description": "A set of tag keys and optional values that were set on this placement.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "tagsToMatch": {
                    "type": "array",
                    "example": "[ { \"key\" : \"compliance\", \"value\": \"pci\" } ]",
                    "description": "A set of tag keys and optional values for compute resource filtering.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "placementPolicy": {
                    "type": "string",
                    "example": "DEFAULT, SPREAD, BINPACK",
                    "description": "The placement policy for the zone."
                }
            },
            "description": "Description of a compute placement zone.  This can be used to specify a subset of compute resources within a region where machines can be placed.**region** - Region - Region for the zone.<br>**self** - Zone - Self link to this zone"
        },
        "ZoneAssignmentConfig": {
            "type": "object",
            "properties": {
                "zoneId": {
                    "type": "string",
                    "example": "77ee1",
                    "description": "The Cloud Zone Id"
                },
                "priority": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "description": "The priority of this zone in the current project. Lower numbers mean higher priority. Default is 0 (highest)"
                },
                "maxNumberInstances": {
                    "type": "integer",
                    "format": "int64",
                    "example": 50,
                    "description": "The maximum number of instances that can be provisioned in this cloud zone. Default is 0 (unlimited instances)."
                }
            },
            "description": "A zone assignment configuration"
        },
        "ZoneResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "List of content items",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Zone"
                    }
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of elements",
                    "readOnly": true
                }
            },
            "description": "State object representing a query result of Zones."
        },
        "ZoneSpecification": {
            "type": "object",
            "required": [
                "name",
                "regionId"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-friendly name used as an identifier in APIs that support this option."
                },
                "description": {
                    "type": "string",
                    "description": "A human-friendly description."
                },
                "regionId": {
                    "type": "string",
                    "example": "9e49",
                    "description": "The id of the region for which this profile is created"
                },
                "placementPolicy": {
                    "type": "string",
                    "example": "DEFAULT",
                    "description": "Placement policy for the zone. One of DEFAULT, SPREAD or BINPACK."
                },
                "tags": {
                    "type": "array",
                    "example": "[ { \"key\" : \"production\", \"value\": \" \" } ]",
                    "description": "A set of tag keys and optional values that are effectively applied to all compute resources in this zone, but only in the context of this zone.",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "tagsToMatch": {
                    "type": "array",
                    "example": "[ { \"key\" : \"compliance\", \"value\": \"pci\" } ]",
                    "description": "A set of tag keys and optional values that will be used ",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }
            },
            "description": "Specification for a zone."
        }
    }
}
