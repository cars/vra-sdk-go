// Code generated by go-swagger; DO NOT EDIT.

package deployment_requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListDeploymentRequestsUsingGETParams creates a new ListDeploymentRequestsUsingGETParams object
// with the default values initialized.
func NewListDeploymentRequestsUsingGETParams() *ListDeploymentRequestsUsingGETParams {
	var ()
	return &ListDeploymentRequestsUsingGETParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListDeploymentRequestsUsingGETParamsWithTimeout creates a new ListDeploymentRequestsUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListDeploymentRequestsUsingGETParamsWithTimeout(timeout time.Duration) *ListDeploymentRequestsUsingGETParams {
	var ()
	return &ListDeploymentRequestsUsingGETParams{

		timeout: timeout,
	}
}

// NewListDeploymentRequestsUsingGETParamsWithContext creates a new ListDeploymentRequestsUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewListDeploymentRequestsUsingGETParamsWithContext(ctx context.Context) *ListDeploymentRequestsUsingGETParams {
	var ()
	return &ListDeploymentRequestsUsingGETParams{

		Context: ctx,
	}
}

// NewListDeploymentRequestsUsingGETParamsWithHTTPClient creates a new ListDeploymentRequestsUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListDeploymentRequestsUsingGETParamsWithHTTPClient(client *http.Client) *ListDeploymentRequestsUsingGETParams {
	var ()
	return &ListDeploymentRequestsUsingGETParams{
		HTTPClient: client,
	}
}

/*ListDeploymentRequestsUsingGETParams contains all the parameters to send to the API endpoint
for the list deployment requests using g e t operation typically these are written to a http.Request
*/
type ListDeploymentRequestsUsingGETParams struct {

	/*DeploymentID
	  Deployment ID

	*/
	DeploymentID *strfmt.UUID
	/*Page
	  Results page you want to retrieve (0..N)

	*/
	Page *int32
	/*Size
	  Number of records per page.

	*/
	Size *int32
	/*Sort
	  Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.

	*/
	Sort []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list deployment requests using g e t params
func (o *ListDeploymentRequestsUsingGETParams) WithTimeout(timeout time.Duration) *ListDeploymentRequestsUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list deployment requests using g e t params
func (o *ListDeploymentRequestsUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list deployment requests using g e t params
func (o *ListDeploymentRequestsUsingGETParams) WithContext(ctx context.Context) *ListDeploymentRequestsUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list deployment requests using g e t params
func (o *ListDeploymentRequestsUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list deployment requests using g e t params
func (o *ListDeploymentRequestsUsingGETParams) WithHTTPClient(client *http.Client) *ListDeploymentRequestsUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list deployment requests using g e t params
func (o *ListDeploymentRequestsUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDeploymentID adds the deploymentID to the list deployment requests using g e t params
func (o *ListDeploymentRequestsUsingGETParams) WithDeploymentID(deploymentID *strfmt.UUID) *ListDeploymentRequestsUsingGETParams {
	o.SetDeploymentID(deploymentID)
	return o
}

// SetDeploymentID adds the deploymentId to the list deployment requests using g e t params
func (o *ListDeploymentRequestsUsingGETParams) SetDeploymentID(deploymentID *strfmt.UUID) {
	o.DeploymentID = deploymentID
}

// WithPage adds the page to the list deployment requests using g e t params
func (o *ListDeploymentRequestsUsingGETParams) WithPage(page *int32) *ListDeploymentRequestsUsingGETParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the list deployment requests using g e t params
func (o *ListDeploymentRequestsUsingGETParams) SetPage(page *int32) {
	o.Page = page
}

// WithSize adds the size to the list deployment requests using g e t params
func (o *ListDeploymentRequestsUsingGETParams) WithSize(size *int32) *ListDeploymentRequestsUsingGETParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the list deployment requests using g e t params
func (o *ListDeploymentRequestsUsingGETParams) SetSize(size *int32) {
	o.Size = size
}

// WithSort adds the sort to the list deployment requests using g e t params
func (o *ListDeploymentRequestsUsingGETParams) WithSort(sort []string) *ListDeploymentRequestsUsingGETParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the list deployment requests using g e t params
func (o *ListDeploymentRequestsUsingGETParams) SetSort(sort []string) {
	o.Sort = sort
}

// WriteToRequest writes these params to a swagger request
func (o *ListDeploymentRequestsUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DeploymentID != nil {

		// query param deploymentId
		var qrDeploymentID strfmt.UUID
		if o.DeploymentID != nil {
			qrDeploymentID = *o.DeploymentID
		}
		qDeploymentID := qrDeploymentID.String()
		if qDeploymentID != "" {
			if err := r.SetQueryParam("deploymentId", qDeploymentID); err != nil {
				return err
			}
		}

	}

	if o.Page != nil {

		// query param page
		var qrPage int32
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if o.Size != nil {

		// query param size
		var qrSize int32
		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := swag.FormatInt32(qrSize)
		if qSize != "" {
			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}

	}

	valuesSort := o.Sort

	joinedSort := swag.JoinByFormat(valuesSort, "multi")
	// query array param sort
	if err := r.SetQueryParam("sort", joinedSort...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
