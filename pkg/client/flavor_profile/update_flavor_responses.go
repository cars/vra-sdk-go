// Code generated by go-swagger; DO NOT EDIT.

package flavor_profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/cas-sdk-go/pkg/models"
)

// UpdateFlavorReader is a Reader for the UpdateFlavor structure.
type UpdateFlavorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateFlavorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateFlavorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewUpdateFlavorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateFlavorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateFlavorOK creates a UpdateFlavorOK with default headers values
func NewUpdateFlavorOK() *UpdateFlavorOK {
	return &UpdateFlavorOK{}
}

/*UpdateFlavorOK handles this case with default header values.

successful operation
*/
type UpdateFlavorOK struct {
	Payload *models.FlavorProfile
}

func (o *UpdateFlavorOK) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/flavor-profiles/{id}][%d] updateFlavorOK  %+v", 200, o.Payload)
}

func (o *UpdateFlavorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FlavorProfile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateFlavorForbidden creates a UpdateFlavorForbidden with default headers values
func NewUpdateFlavorForbidden() *UpdateFlavorForbidden {
	return &UpdateFlavorForbidden{}
}

/*UpdateFlavorForbidden handles this case with default header values.

Forbidden
*/
type UpdateFlavorForbidden struct {
}

func (o *UpdateFlavorForbidden) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/flavor-profiles/{id}][%d] updateFlavorForbidden ", 403)
}

func (o *UpdateFlavorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateFlavorNotFound creates a UpdateFlavorNotFound with default headers values
func NewUpdateFlavorNotFound() *UpdateFlavorNotFound {
	return &UpdateFlavorNotFound{}
}

/*UpdateFlavorNotFound handles this case with default header values.

Not Found
*/
type UpdateFlavorNotFound struct {
}

func (o *UpdateFlavorNotFound) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/flavor-profiles/{id}][%d] updateFlavorNotFound ", 404)
}

func (o *UpdateFlavorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
