// Code generated by go-swagger; DO NOT EDIT.

package requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// ListResourceRequestsUsingGETReader is a Reader for the ListResourceRequestsUsingGET structure.
type ListResourceRequestsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListResourceRequestsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListResourceRequestsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListResourceRequestsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListResourceRequestsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListResourceRequestsUsingGETOK creates a ListResourceRequestsUsingGETOK with default headers values
func NewListResourceRequestsUsingGETOK() *ListResourceRequestsUsingGETOK {
	return &ListResourceRequestsUsingGETOK{}
}

/* ListResourceRequestsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type ListResourceRequestsUsingGETOK struct {
	Payload *models.PageOfRequest
}

func (o *ListResourceRequestsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /deployment/api/resources/{resourceId}/requests][%d] listResourceRequestsUsingGETOK  %+v", 200, o.Payload)
}
func (o *ListResourceRequestsUsingGETOK) GetPayload() *models.PageOfRequest {
	return o.Payload
}

func (o *ListResourceRequestsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListResourceRequestsUsingGETUnauthorized creates a ListResourceRequestsUsingGETUnauthorized with default headers values
func NewListResourceRequestsUsingGETUnauthorized() *ListResourceRequestsUsingGETUnauthorized {
	return &ListResourceRequestsUsingGETUnauthorized{}
}

/* ListResourceRequestsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListResourceRequestsUsingGETUnauthorized struct {
}

func (o *ListResourceRequestsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /deployment/api/resources/{resourceId}/requests][%d] listResourceRequestsUsingGETUnauthorized ", 401)
}

func (o *ListResourceRequestsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListResourceRequestsUsingGETNotFound creates a ListResourceRequestsUsingGETNotFound with default headers values
func NewListResourceRequestsUsingGETNotFound() *ListResourceRequestsUsingGETNotFound {
	return &ListResourceRequestsUsingGETNotFound{}
}

/* ListResourceRequestsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListResourceRequestsUsingGETNotFound struct {
	Payload *models.Error
}

func (o *ListResourceRequestsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /deployment/api/resources/{resourceId}/requests][%d] listResourceRequestsUsingGETNotFound  %+v", 404, o.Payload)
}
func (o *ListResourceRequestsUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListResourceRequestsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
