// Code generated by go-swagger; DO NOT EDIT.

package deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteResourceUsingDELETEReader is a Reader for the DeleteResourceUsingDELETE structure.
type DeleteResourceUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteResourceUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteResourceUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteResourceUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteResourceUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteResourceUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteResourceUsingDELETEOK creates a DeleteResourceUsingDELETEOK with default headers values
func NewDeleteResourceUsingDELETEOK() *DeleteResourceUsingDELETEOK {
	return &DeleteResourceUsingDELETEOK{}
}

/*DeleteResourceUsingDELETEOK handles this case with default header values.

OK
*/
type DeleteResourceUsingDELETEOK struct {
}

func (o *DeleteResourceUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /deployment/api/deployments/{depId}/resources/{resourceId}][%d] deleteResourceUsingDELETEOK ", 200)
}

func (o *DeleteResourceUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteResourceUsingDELETENoContent creates a DeleteResourceUsingDELETENoContent with default headers values
func NewDeleteResourceUsingDELETENoContent() *DeleteResourceUsingDELETENoContent {
	return &DeleteResourceUsingDELETENoContent{}
}

/*DeleteResourceUsingDELETENoContent handles this case with default header values.

No Content
*/
type DeleteResourceUsingDELETENoContent struct {
}

func (o *DeleteResourceUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /deployment/api/deployments/{depId}/resources/{resourceId}][%d] deleteResourceUsingDELETENoContent ", 204)
}

func (o *DeleteResourceUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteResourceUsingDELETEUnauthorized creates a DeleteResourceUsingDELETEUnauthorized with default headers values
func NewDeleteResourceUsingDELETEUnauthorized() *DeleteResourceUsingDELETEUnauthorized {
	return &DeleteResourceUsingDELETEUnauthorized{}
}

/*DeleteResourceUsingDELETEUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteResourceUsingDELETEUnauthorized struct {
}

func (o *DeleteResourceUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /deployment/api/deployments/{depId}/resources/{resourceId}][%d] deleteResourceUsingDELETEUnauthorized ", 401)
}

func (o *DeleteResourceUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteResourceUsingDELETEForbidden creates a DeleteResourceUsingDELETEForbidden with default headers values
func NewDeleteResourceUsingDELETEForbidden() *DeleteResourceUsingDELETEForbidden {
	return &DeleteResourceUsingDELETEForbidden{}
}

/*DeleteResourceUsingDELETEForbidden handles this case with default header values.

Forbidden
*/
type DeleteResourceUsingDELETEForbidden struct {
}

func (o *DeleteResourceUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /deployment/api/deployments/{depId}/resources/{resourceId}][%d] deleteResourceUsingDELETEForbidden ", 403)
}

func (o *DeleteResourceUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
