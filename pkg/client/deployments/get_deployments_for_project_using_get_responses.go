// Code generated by go-swagger; DO NOT EDIT.

package deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// GetDeploymentsForProjectUsingGETReader is a Reader for the GetDeploymentsForProjectUsingGET structure.
type GetDeploymentsForProjectUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeploymentsForProjectUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDeploymentsForProjectUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDeploymentsForProjectUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDeploymentsForProjectUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDeploymentsForProjectUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDeploymentsForProjectUsingGETOK creates a GetDeploymentsForProjectUsingGETOK with default headers values
func NewGetDeploymentsForProjectUsingGETOK() *GetDeploymentsForProjectUsingGETOK {
	return &GetDeploymentsForProjectUsingGETOK{}
}

/*GetDeploymentsForProjectUsingGETOK handles this case with default header values.

OK
*/
type GetDeploymentsForProjectUsingGETOK struct {
	Payload *models.Page
}

func (o *GetDeploymentsForProjectUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /deployment/api/projects/{projectId}/deployment-count][%d] getDeploymentsForProjectUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetDeploymentsForProjectUsingGETOK) GetPayload() *models.Page {
	return o.Payload
}

func (o *GetDeploymentsForProjectUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Page)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentsForProjectUsingGETUnauthorized creates a GetDeploymentsForProjectUsingGETUnauthorized with default headers values
func NewGetDeploymentsForProjectUsingGETUnauthorized() *GetDeploymentsForProjectUsingGETUnauthorized {
	return &GetDeploymentsForProjectUsingGETUnauthorized{}
}

/*GetDeploymentsForProjectUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDeploymentsForProjectUsingGETUnauthorized struct {
}

func (o *GetDeploymentsForProjectUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /deployment/api/projects/{projectId}/deployment-count][%d] getDeploymentsForProjectUsingGETUnauthorized ", 401)
}

func (o *GetDeploymentsForProjectUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeploymentsForProjectUsingGETForbidden creates a GetDeploymentsForProjectUsingGETForbidden with default headers values
func NewGetDeploymentsForProjectUsingGETForbidden() *GetDeploymentsForProjectUsingGETForbidden {
	return &GetDeploymentsForProjectUsingGETForbidden{}
}

/*GetDeploymentsForProjectUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetDeploymentsForProjectUsingGETForbidden struct {
}

func (o *GetDeploymentsForProjectUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /deployment/api/projects/{projectId}/deployment-count][%d] getDeploymentsForProjectUsingGETForbidden ", 403)
}

func (o *GetDeploymentsForProjectUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeploymentsForProjectUsingGETNotFound creates a GetDeploymentsForProjectUsingGETNotFound with default headers values
func NewGetDeploymentsForProjectUsingGETNotFound() *GetDeploymentsForProjectUsingGETNotFound {
	return &GetDeploymentsForProjectUsingGETNotFound{}
}

/*GetDeploymentsForProjectUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetDeploymentsForProjectUsingGETNotFound struct {
}

func (o *GetDeploymentsForProjectUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /deployment/api/projects/{projectId}/deployment-count][%d] getDeploymentsForProjectUsingGETNotFound ", 404)
}

func (o *GetDeploymentsForProjectUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
