// Code generated by go-swagger; DO NOT EDIT.

package deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetDeploymentResourcesUsingGETParams creates a new GetDeploymentResourcesUsingGETParams object
// with the default values initialized.
func NewGetDeploymentResourcesUsingGETParams() *GetDeploymentResourcesUsingGETParams {
	var ()
	return &GetDeploymentResourcesUsingGETParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDeploymentResourcesUsingGETParamsWithTimeout creates a new GetDeploymentResourcesUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDeploymentResourcesUsingGETParamsWithTimeout(timeout time.Duration) *GetDeploymentResourcesUsingGETParams {
	var ()
	return &GetDeploymentResourcesUsingGETParams{

		timeout: timeout,
	}
}

// NewGetDeploymentResourcesUsingGETParamsWithContext creates a new GetDeploymentResourcesUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetDeploymentResourcesUsingGETParamsWithContext(ctx context.Context) *GetDeploymentResourcesUsingGETParams {
	var ()
	return &GetDeploymentResourcesUsingGETParams{

		Context: ctx,
	}
}

// NewGetDeploymentResourcesUsingGETParamsWithHTTPClient creates a new GetDeploymentResourcesUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDeploymentResourcesUsingGETParamsWithHTTPClient(client *http.Client) *GetDeploymentResourcesUsingGETParams {
	var ()
	return &GetDeploymentResourcesUsingGETParams{
		HTTPClient: client,
	}
}

/*GetDeploymentResourcesUsingGETParams contains all the parameters to send to the API endpoint
for the get deployment resources using g e t operation typically these are written to a http.Request
*/
type GetDeploymentResourcesUsingGETParams struct {

	/*DepID
	  Deployment ID

	*/
	DepID strfmt.UUID
	/*ExpandMetadata
	  Retrieves the 'metadata' field of each resource.

	*/
	ExpandMetadata *bool
	/*ForceCachedResources
	  Retrieves the resources from a cache for a faster query.

	*/
	ForceCachedResources *bool
	/*ForceRefreshResources
	  Guarantees the resources are up-to-date.

	*/
	ForceRefreshResources *bool
	/*Page
	  Results page you want to retrieve (0..N)

	*/
	Page *int32
	/*Size
	  Number of records per page.

	*/
	Size *int32
	/*Sort
	  Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.

	*/
	Sort []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) WithTimeout(timeout time.Duration) *GetDeploymentResourcesUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) WithContext(ctx context.Context) *GetDeploymentResourcesUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) WithHTTPClient(client *http.Client) *GetDeploymentResourcesUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDepID adds the depID to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) WithDepID(depID strfmt.UUID) *GetDeploymentResourcesUsingGETParams {
	o.SetDepID(depID)
	return o
}

// SetDepID adds the depId to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) SetDepID(depID strfmt.UUID) {
	o.DepID = depID
}

// WithExpandMetadata adds the expandMetadata to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) WithExpandMetadata(expandMetadata *bool) *GetDeploymentResourcesUsingGETParams {
	o.SetExpandMetadata(expandMetadata)
	return o
}

// SetExpandMetadata adds the expandMetadata to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) SetExpandMetadata(expandMetadata *bool) {
	o.ExpandMetadata = expandMetadata
}

// WithForceCachedResources adds the forceCachedResources to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) WithForceCachedResources(forceCachedResources *bool) *GetDeploymentResourcesUsingGETParams {
	o.SetForceCachedResources(forceCachedResources)
	return o
}

// SetForceCachedResources adds the forceCachedResources to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) SetForceCachedResources(forceCachedResources *bool) {
	o.ForceCachedResources = forceCachedResources
}

// WithForceRefreshResources adds the forceRefreshResources to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) WithForceRefreshResources(forceRefreshResources *bool) *GetDeploymentResourcesUsingGETParams {
	o.SetForceRefreshResources(forceRefreshResources)
	return o
}

// SetForceRefreshResources adds the forceRefreshResources to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) SetForceRefreshResources(forceRefreshResources *bool) {
	o.ForceRefreshResources = forceRefreshResources
}

// WithPage adds the page to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) WithPage(page *int32) *GetDeploymentResourcesUsingGETParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) SetPage(page *int32) {
	o.Page = page
}

// WithSize adds the size to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) WithSize(size *int32) *GetDeploymentResourcesUsingGETParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) SetSize(size *int32) {
	o.Size = size
}

// WithSort adds the sort to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) WithSort(sort []string) *GetDeploymentResourcesUsingGETParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the get deployment resources using g e t params
func (o *GetDeploymentResourcesUsingGETParams) SetSort(sort []string) {
	o.Sort = sort
}

// WriteToRequest writes these params to a swagger request
func (o *GetDeploymentResourcesUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param depId
	if err := r.SetPathParam("depId", o.DepID.String()); err != nil {
		return err
	}

	if o.ExpandMetadata != nil {

		// query param expandMetadata
		var qrExpandMetadata bool
		if o.ExpandMetadata != nil {
			qrExpandMetadata = *o.ExpandMetadata
		}
		qExpandMetadata := swag.FormatBool(qrExpandMetadata)
		if qExpandMetadata != "" {
			if err := r.SetQueryParam("expandMetadata", qExpandMetadata); err != nil {
				return err
			}
		}

	}

	if o.ForceCachedResources != nil {

		// query param forceCachedResources
		var qrForceCachedResources bool
		if o.ForceCachedResources != nil {
			qrForceCachedResources = *o.ForceCachedResources
		}
		qForceCachedResources := swag.FormatBool(qrForceCachedResources)
		if qForceCachedResources != "" {
			if err := r.SetQueryParam("forceCachedResources", qForceCachedResources); err != nil {
				return err
			}
		}

	}

	if o.ForceRefreshResources != nil {

		// query param forceRefreshResources
		var qrForceRefreshResources bool
		if o.ForceRefreshResources != nil {
			qrForceRefreshResources = *o.ForceRefreshResources
		}
		qForceRefreshResources := swag.FormatBool(qrForceRefreshResources)
		if qForceRefreshResources != "" {
			if err := r.SetQueryParam("forceRefreshResources", qForceRefreshResources); err != nil {
				return err
			}
		}

	}

	if o.Page != nil {

		// query param page
		var qrPage int32
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if o.Size != nil {

		// query param size
		var qrSize int32
		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := swag.FormatInt32(qrSize)
		if qSize != "" {
			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}

	}

	valuesSort := o.Sort

	joinedSort := swag.JoinByFormat(valuesSort, "multi")
	// query array param sort
	if err := r.SetQueryParam("sort", joinedSort...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
