// Code generated by go-swagger; DO NOT EDIT.

package deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetDeploymentsUsingGETParams creates a new GetDeploymentsUsingGETParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetDeploymentsUsingGETParams() *GetDeploymentsUsingGETParams {
	return &GetDeploymentsUsingGETParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetDeploymentsUsingGETParamsWithTimeout creates a new GetDeploymentsUsingGETParams object
// with the ability to set a timeout on a request.
func NewGetDeploymentsUsingGETParamsWithTimeout(timeout time.Duration) *GetDeploymentsUsingGETParams {
	return &GetDeploymentsUsingGETParams{
		timeout: timeout,
	}
}

// NewGetDeploymentsUsingGETParamsWithContext creates a new GetDeploymentsUsingGETParams object
// with the ability to set a context for a request.
func NewGetDeploymentsUsingGETParamsWithContext(ctx context.Context) *GetDeploymentsUsingGETParams {
	return &GetDeploymentsUsingGETParams{
		Context: ctx,
	}
}

// NewGetDeploymentsUsingGETParamsWithHTTPClient creates a new GetDeploymentsUsingGETParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetDeploymentsUsingGETParamsWithHTTPClient(client *http.Client) *GetDeploymentsUsingGETParams {
	return &GetDeploymentsUsingGETParams{
		HTTPClient: client,
	}
}

/* GetDeploymentsUsingGETParams contains all the parameters to send to the API endpoint
   for the get deployments using g e t operation.

   Typically these are written to a http.Request.
*/
type GetDeploymentsUsingGETParams struct {

	/* DollarOrderby.

	   Sorting criteria in the format: property (asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
	*/
	DollarOrderby []string

	/* DollarSkip.

	   Number of records you want to skip

	   Format: int32
	*/
	DollarSkip *int32

	/* DollarTop.

	   Number of records you want

	   Format: int32
	*/
	DollarTop *int32

	/* APIVersion.

	   The version of the API in yyyy-MM-dd format (UTC). If you do not specify explicitly an exact version, you will be calling the latest supported API version.
	*/
	APIVersion *string

	/* CloudAccounts.

	   A comma-separated list. Results must be associated with one of these cloud accounts.
	*/
	CloudAccounts []string

	/* CloudTypes.

	   A comma-separated list. Results must be associated with one of these endpoint Types
	*/
	CloudTypes []string

	/* CreatedAt.

	   Comma-separated start and end dates where start date or end date is optional (e.g. [2020-12-01T08:00:00.000Z,2020-12-11T23:59:00.000Z], [2020-11-03T08:00:00.000Z,], [,2020-11-08T08:00:00.000Z]
	*/
	CreatedAt *string

	/* Deleted.

	   Retrieves only soft-deleted deployments that have not yet been completely deleted.
	*/
	Deleted *bool

	/* Expand.

	   The expanded details of the requested comma separated objects. 'resources' option returns resources with all properties. Ex. blueprint, project
	*/
	Expand []string

	/* ExpandLastRequest.

	   Expands deployment last request.
	*/
	ExpandLastRequest *bool

	/* ExpandProject.

	   The 'project' field of each resulting deployment will be retrieved.
	*/
	ExpandProject *bool

	/* ExpandResources.

	   The 'resources' field of each resulting deployment will be retrieved.
	*/
	ExpandResources *bool

	/* ExpiresAt.

	   Comma-separated start and end dates for the interval
	*/
	ExpiresAt *string

	/* Ids.

	   A comma-separated list. Only deployments with these IDs will be included in the results.
	*/
	Ids []strfmt.UUID

	/* LastRequestStatus.

	   A comma-separated list of last request statuses. Allowed values are: ABORTED, APPROVAL_PENDING, APPROVAL_REJECTED, FAILED, INPROGRESS, PENDING and SUCCESSFUL. Results must be associated with one of these last request statuses.
	*/
	LastRequestStatus []string

	/* LastUpdatedAt.

	   Comma-separated start and end dates where start date or end date is optional (e.g. [2020-12-01T08:00:00.000Z,2020-12-11T23:59:00.000Z], [2020-11-03T08:00:00.000Z,], [,2020-11-08T08:00:00.000Z]
	*/
	LastUpdatedAt *string

	/* Name.

	   Results must have exactly this name.
	*/
	Name *string

	/* OwnedBy.

	   A comma-separated list. Results must be associated with one of these owners
	*/
	OwnedBy []string

	/* Projects.

	   A comma-separated list. Results must be associated with one of these project IDs.
	*/
	Projects []string

	/* RequestedBy.

	   A comma-separated list. Results must be associated with one of these requesters
	*/
	RequestedBy []string

	/* ResourceTypes.

	   A comma-separated list. Results must be associated with one of these resourceType Names.
	*/
	ResourceTypes []string

	/* Search.

	   Given string should either be part of a searchable field in a deployment or one of deployment's resources.
	*/
	Search *string

	/* Status.

	   A comma-separated list. Results must be associated with one of these statuses.
	*/
	Status []string

	/* Tags.

	   A comma-separated list. Results must be associated with one of these tags
	*/
	Tags []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get deployments using get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDeploymentsUsingGETParams) WithDefaults() *GetDeploymentsUsingGETParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get deployments using get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDeploymentsUsingGETParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithTimeout(timeout time.Duration) *GetDeploymentsUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithContext(ctx context.Context) *GetDeploymentsUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithHTTPClient(client *http.Client) *GetDeploymentsUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDollarOrderby adds the dollarOrderby to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithDollarOrderby(dollarOrderby []string) *GetDeploymentsUsingGETParams {
	o.SetDollarOrderby(dollarOrderby)
	return o
}

// SetDollarOrderby adds the dollarOrderby to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetDollarOrderby(dollarOrderby []string) {
	o.DollarOrderby = dollarOrderby
}

// WithDollarSkip adds the dollarSkip to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithDollarSkip(dollarSkip *int32) *GetDeploymentsUsingGETParams {
	o.SetDollarSkip(dollarSkip)
	return o
}

// SetDollarSkip adds the dollarSkip to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetDollarSkip(dollarSkip *int32) {
	o.DollarSkip = dollarSkip
}

// WithDollarTop adds the dollarTop to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithDollarTop(dollarTop *int32) *GetDeploymentsUsingGETParams {
	o.SetDollarTop(dollarTop)
	return o
}

// SetDollarTop adds the dollarTop to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetDollarTop(dollarTop *int32) {
	o.DollarTop = dollarTop
}

// WithAPIVersion adds the aPIVersion to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithAPIVersion(aPIVersion *string) *GetDeploymentsUsingGETParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetAPIVersion(aPIVersion *string) {
	o.APIVersion = aPIVersion
}

// WithCloudAccounts adds the cloudAccounts to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithCloudAccounts(cloudAccounts []string) *GetDeploymentsUsingGETParams {
	o.SetCloudAccounts(cloudAccounts)
	return o
}

// SetCloudAccounts adds the cloudAccounts to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetCloudAccounts(cloudAccounts []string) {
	o.CloudAccounts = cloudAccounts
}

// WithCloudTypes adds the cloudTypes to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithCloudTypes(cloudTypes []string) *GetDeploymentsUsingGETParams {
	o.SetCloudTypes(cloudTypes)
	return o
}

// SetCloudTypes adds the cloudTypes to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetCloudTypes(cloudTypes []string) {
	o.CloudTypes = cloudTypes
}

// WithCreatedAt adds the createdAt to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithCreatedAt(createdAt *string) *GetDeploymentsUsingGETParams {
	o.SetCreatedAt(createdAt)
	return o
}

// SetCreatedAt adds the createdAt to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetCreatedAt(createdAt *string) {
	o.CreatedAt = createdAt
}

// WithDeleted adds the deleted to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithDeleted(deleted *bool) *GetDeploymentsUsingGETParams {
	o.SetDeleted(deleted)
	return o
}

// SetDeleted adds the deleted to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetDeleted(deleted *bool) {
	o.Deleted = deleted
}

// WithExpand adds the expand to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithExpand(expand []string) *GetDeploymentsUsingGETParams {
	o.SetExpand(expand)
	return o
}

// SetExpand adds the expand to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetExpand(expand []string) {
	o.Expand = expand
}

// WithExpandLastRequest adds the expandLastRequest to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithExpandLastRequest(expandLastRequest *bool) *GetDeploymentsUsingGETParams {
	o.SetExpandLastRequest(expandLastRequest)
	return o
}

// SetExpandLastRequest adds the expandLastRequest to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetExpandLastRequest(expandLastRequest *bool) {
	o.ExpandLastRequest = expandLastRequest
}

// WithExpandProject adds the expandProject to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithExpandProject(expandProject *bool) *GetDeploymentsUsingGETParams {
	o.SetExpandProject(expandProject)
	return o
}

// SetExpandProject adds the expandProject to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetExpandProject(expandProject *bool) {
	o.ExpandProject = expandProject
}

// WithExpandResources adds the expandResources to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithExpandResources(expandResources *bool) *GetDeploymentsUsingGETParams {
	o.SetExpandResources(expandResources)
	return o
}

// SetExpandResources adds the expandResources to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetExpandResources(expandResources *bool) {
	o.ExpandResources = expandResources
}

// WithExpiresAt adds the expiresAt to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithExpiresAt(expiresAt *string) *GetDeploymentsUsingGETParams {
	o.SetExpiresAt(expiresAt)
	return o
}

// SetExpiresAt adds the expiresAt to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetExpiresAt(expiresAt *string) {
	o.ExpiresAt = expiresAt
}

// WithIds adds the ids to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithIds(ids []strfmt.UUID) *GetDeploymentsUsingGETParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetIds(ids []strfmt.UUID) {
	o.Ids = ids
}

// WithLastRequestStatus adds the lastRequestStatus to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithLastRequestStatus(lastRequestStatus []string) *GetDeploymentsUsingGETParams {
	o.SetLastRequestStatus(lastRequestStatus)
	return o
}

// SetLastRequestStatus adds the lastRequestStatus to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetLastRequestStatus(lastRequestStatus []string) {
	o.LastRequestStatus = lastRequestStatus
}

// WithLastUpdatedAt adds the lastUpdatedAt to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithLastUpdatedAt(lastUpdatedAt *string) *GetDeploymentsUsingGETParams {
	o.SetLastUpdatedAt(lastUpdatedAt)
	return o
}

// SetLastUpdatedAt adds the lastUpdatedAt to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetLastUpdatedAt(lastUpdatedAt *string) {
	o.LastUpdatedAt = lastUpdatedAt
}

// WithName adds the name to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithName(name *string) *GetDeploymentsUsingGETParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetName(name *string) {
	o.Name = name
}

// WithOwnedBy adds the ownedBy to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithOwnedBy(ownedBy []string) *GetDeploymentsUsingGETParams {
	o.SetOwnedBy(ownedBy)
	return o
}

// SetOwnedBy adds the ownedBy to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetOwnedBy(ownedBy []string) {
	o.OwnedBy = ownedBy
}

// WithProjects adds the projects to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithProjects(projects []string) *GetDeploymentsUsingGETParams {
	o.SetProjects(projects)
	return o
}

// SetProjects adds the projects to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetProjects(projects []string) {
	o.Projects = projects
}

// WithRequestedBy adds the requestedBy to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithRequestedBy(requestedBy []string) *GetDeploymentsUsingGETParams {
	o.SetRequestedBy(requestedBy)
	return o
}

// SetRequestedBy adds the requestedBy to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetRequestedBy(requestedBy []string) {
	o.RequestedBy = requestedBy
}

// WithResourceTypes adds the resourceTypes to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithResourceTypes(resourceTypes []string) *GetDeploymentsUsingGETParams {
	o.SetResourceTypes(resourceTypes)
	return o
}

// SetResourceTypes adds the resourceTypes to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetResourceTypes(resourceTypes []string) {
	o.ResourceTypes = resourceTypes
}

// WithSearch adds the search to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithSearch(search *string) *GetDeploymentsUsingGETParams {
	o.SetSearch(search)
	return o
}

// SetSearch adds the search to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetSearch(search *string) {
	o.Search = search
}

// WithStatus adds the status to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithStatus(status []string) *GetDeploymentsUsingGETParams {
	o.SetStatus(status)
	return o
}

// SetStatus adds the status to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetStatus(status []string) {
	o.Status = status
}

// WithTags adds the tags to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) WithTags(tags []string) *GetDeploymentsUsingGETParams {
	o.SetTags(tags)
	return o
}

// SetTags adds the tags to the get deployments using get params
func (o *GetDeploymentsUsingGETParams) SetTags(tags []string) {
	o.Tags = tags
}

// WriteToRequest writes these params to a swagger request
func (o *GetDeploymentsUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DollarOrderby != nil {

		// binding items for $orderby
		joinedDollarOrderby := o.bindParamDollarOrderby(reg)

		// query array param $orderby
		if err := r.SetQueryParam("$orderby", joinedDollarOrderby...); err != nil {
			return err
		}
	}

	if o.DollarSkip != nil {

		// query param $skip
		var qrDollarSkip int32

		if o.DollarSkip != nil {
			qrDollarSkip = *o.DollarSkip
		}
		qDollarSkip := swag.FormatInt32(qrDollarSkip)
		if qDollarSkip != "" {

			if err := r.SetQueryParam("$skip", qDollarSkip); err != nil {
				return err
			}
		}
	}

	if o.DollarTop != nil {

		// query param $top
		var qrDollarTop int32

		if o.DollarTop != nil {
			qrDollarTop = *o.DollarTop
		}
		qDollarTop := swag.FormatInt32(qrDollarTop)
		if qDollarTop != "" {

			if err := r.SetQueryParam("$top", qDollarTop); err != nil {
				return err
			}
		}
	}

	if o.APIVersion != nil {

		// query param apiVersion
		var qrAPIVersion string

		if o.APIVersion != nil {
			qrAPIVersion = *o.APIVersion
		}
		qAPIVersion := qrAPIVersion
		if qAPIVersion != "" {

			if err := r.SetQueryParam("apiVersion", qAPIVersion); err != nil {
				return err
			}
		}
	}

	if o.CloudAccounts != nil {

		// binding items for cloudAccounts
		joinedCloudAccounts := o.bindParamCloudAccounts(reg)

		// query array param cloudAccounts
		if err := r.SetQueryParam("cloudAccounts", joinedCloudAccounts...); err != nil {
			return err
		}
	}

	if o.CloudTypes != nil {

		// binding items for cloudTypes
		joinedCloudTypes := o.bindParamCloudTypes(reg)

		// query array param cloudTypes
		if err := r.SetQueryParam("cloudTypes", joinedCloudTypes...); err != nil {
			return err
		}
	}

	if o.CreatedAt != nil {

		// query param createdAt
		var qrCreatedAt string

		if o.CreatedAt != nil {
			qrCreatedAt = *o.CreatedAt
		}
		qCreatedAt := qrCreatedAt
		if qCreatedAt != "" {

			if err := r.SetQueryParam("createdAt", qCreatedAt); err != nil {
				return err
			}
		}
	}

	if o.Deleted != nil {

		// query param deleted
		var qrDeleted bool

		if o.Deleted != nil {
			qrDeleted = *o.Deleted
		}
		qDeleted := swag.FormatBool(qrDeleted)
		if qDeleted != "" {

			if err := r.SetQueryParam("deleted", qDeleted); err != nil {
				return err
			}
		}
	}

	if o.Expand != nil {

		// binding items for expand
		joinedExpand := o.bindParamExpand(reg)

		// query array param expand
		if err := r.SetQueryParam("expand", joinedExpand...); err != nil {
			return err
		}
	}

	if o.ExpandLastRequest != nil {

		// query param expandLastRequest
		var qrExpandLastRequest bool

		if o.ExpandLastRequest != nil {
			qrExpandLastRequest = *o.ExpandLastRequest
		}
		qExpandLastRequest := swag.FormatBool(qrExpandLastRequest)
		if qExpandLastRequest != "" {

			if err := r.SetQueryParam("expandLastRequest", qExpandLastRequest); err != nil {
				return err
			}
		}
	}

	if o.ExpandProject != nil {

		// query param expandProject
		var qrExpandProject bool

		if o.ExpandProject != nil {
			qrExpandProject = *o.ExpandProject
		}
		qExpandProject := swag.FormatBool(qrExpandProject)
		if qExpandProject != "" {

			if err := r.SetQueryParam("expandProject", qExpandProject); err != nil {
				return err
			}
		}
	}

	if o.ExpandResources != nil {

		// query param expandResources
		var qrExpandResources bool

		if o.ExpandResources != nil {
			qrExpandResources = *o.ExpandResources
		}
		qExpandResources := swag.FormatBool(qrExpandResources)
		if qExpandResources != "" {

			if err := r.SetQueryParam("expandResources", qExpandResources); err != nil {
				return err
			}
		}
	}

	if o.ExpiresAt != nil {

		// query param expiresAt
		var qrExpiresAt string

		if o.ExpiresAt != nil {
			qrExpiresAt = *o.ExpiresAt
		}
		qExpiresAt := qrExpiresAt
		if qExpiresAt != "" {

			if err := r.SetQueryParam("expiresAt", qExpiresAt); err != nil {
				return err
			}
		}
	}

	if o.Ids != nil {

		// binding items for ids
		joinedIds := o.bindParamIds(reg)

		// query array param ids
		if err := r.SetQueryParam("ids", joinedIds...); err != nil {
			return err
		}
	}

	if o.LastRequestStatus != nil {

		// binding items for lastRequestStatus
		joinedLastRequestStatus := o.bindParamLastRequestStatus(reg)

		// query array param lastRequestStatus
		if err := r.SetQueryParam("lastRequestStatus", joinedLastRequestStatus...); err != nil {
			return err
		}
	}

	if o.LastUpdatedAt != nil {

		// query param lastUpdatedAt
		var qrLastUpdatedAt string

		if o.LastUpdatedAt != nil {
			qrLastUpdatedAt = *o.LastUpdatedAt
		}
		qLastUpdatedAt := qrLastUpdatedAt
		if qLastUpdatedAt != "" {

			if err := r.SetQueryParam("lastUpdatedAt", qLastUpdatedAt); err != nil {
				return err
			}
		}
	}

	if o.Name != nil {

		// query param name
		var qrName string

		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.OwnedBy != nil {

		// binding items for ownedBy
		joinedOwnedBy := o.bindParamOwnedBy(reg)

		// query array param ownedBy
		if err := r.SetQueryParam("ownedBy", joinedOwnedBy...); err != nil {
			return err
		}
	}

	if o.Projects != nil {

		// binding items for projects
		joinedProjects := o.bindParamProjects(reg)

		// query array param projects
		if err := r.SetQueryParam("projects", joinedProjects...); err != nil {
			return err
		}
	}

	if o.RequestedBy != nil {

		// binding items for requestedBy
		joinedRequestedBy := o.bindParamRequestedBy(reg)

		// query array param requestedBy
		if err := r.SetQueryParam("requestedBy", joinedRequestedBy...); err != nil {
			return err
		}
	}

	if o.ResourceTypes != nil {

		// binding items for resourceTypes
		joinedResourceTypes := o.bindParamResourceTypes(reg)

		// query array param resourceTypes
		if err := r.SetQueryParam("resourceTypes", joinedResourceTypes...); err != nil {
			return err
		}
	}

	if o.Search != nil {

		// query param search
		var qrSearch string

		if o.Search != nil {
			qrSearch = *o.Search
		}
		qSearch := qrSearch
		if qSearch != "" {

			if err := r.SetQueryParam("search", qSearch); err != nil {
				return err
			}
		}
	}

	if o.Status != nil {

		// binding items for status
		joinedStatus := o.bindParamStatus(reg)

		// query array param status
		if err := r.SetQueryParam("status", joinedStatus...); err != nil {
			return err
		}
	}

	if o.Tags != nil {

		// binding items for tags
		joinedTags := o.bindParamTags(reg)

		// query array param tags
		if err := r.SetQueryParam("tags", joinedTags...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetDeploymentsUsingGET binds the parameter $orderby
func (o *GetDeploymentsUsingGETParams) bindParamDollarOrderby(formats strfmt.Registry) []string {
	dollarOrderbyIR := o.DollarOrderby

	var dollarOrderbyIC []string
	for _, dollarOrderbyIIR := range dollarOrderbyIR { // explode []string

		dollarOrderbyIIV := dollarOrderbyIIR // string as string
		dollarOrderbyIC = append(dollarOrderbyIC, dollarOrderbyIIV)
	}

	// items.CollectionFormat: "multi"
	dollarOrderbyIS := swag.JoinByFormat(dollarOrderbyIC, "multi")

	return dollarOrderbyIS
}

// bindParamGetDeploymentsUsingGET binds the parameter cloudAccounts
func (o *GetDeploymentsUsingGETParams) bindParamCloudAccounts(formats strfmt.Registry) []string {
	cloudAccountsIR := o.CloudAccounts

	var cloudAccountsIC []string
	for _, cloudAccountsIIR := range cloudAccountsIR { // explode []string

		cloudAccountsIIV := cloudAccountsIIR // string as string
		cloudAccountsIC = append(cloudAccountsIC, cloudAccountsIIV)
	}

	// items.CollectionFormat: "multi"
	cloudAccountsIS := swag.JoinByFormat(cloudAccountsIC, "multi")

	return cloudAccountsIS
}

// bindParamGetDeploymentsUsingGET binds the parameter cloudTypes
func (o *GetDeploymentsUsingGETParams) bindParamCloudTypes(formats strfmt.Registry) []string {
	cloudTypesIR := o.CloudTypes

	var cloudTypesIC []string
	for _, cloudTypesIIR := range cloudTypesIR { // explode []string

		cloudTypesIIV := cloudTypesIIR // string as string
		cloudTypesIC = append(cloudTypesIC, cloudTypesIIV)
	}

	// items.CollectionFormat: "multi"
	cloudTypesIS := swag.JoinByFormat(cloudTypesIC, "multi")

	return cloudTypesIS
}

// bindParamGetDeploymentsUsingGET binds the parameter expand
func (o *GetDeploymentsUsingGETParams) bindParamExpand(formats strfmt.Registry) []string {
	expandIR := o.Expand

	var expandIC []string
	for _, expandIIR := range expandIR { // explode []string

		expandIIV := expandIIR // string as string
		expandIC = append(expandIC, expandIIV)
	}

	// items.CollectionFormat: "multi"
	expandIS := swag.JoinByFormat(expandIC, "multi")

	return expandIS
}

// bindParamGetDeploymentsUsingGET binds the parameter ids
func (o *GetDeploymentsUsingGETParams) bindParamIds(formats strfmt.Registry) []string {
	idsIR := o.Ids

	var idsIC []string
	for _, idsIIR := range idsIR { // explode []strfmt.UUID

		idsIIV := idsIIR.String() // strfmt.UUID as string
		idsIC = append(idsIC, idsIIV)
	}

	// items.CollectionFormat: "multi"
	idsIS := swag.JoinByFormat(idsIC, "multi")

	return idsIS
}

// bindParamGetDeploymentsUsingGET binds the parameter lastRequestStatus
func (o *GetDeploymentsUsingGETParams) bindParamLastRequestStatus(formats strfmt.Registry) []string {
	lastRequestStatusIR := o.LastRequestStatus

	var lastRequestStatusIC []string
	for _, lastRequestStatusIIR := range lastRequestStatusIR { // explode []string

		lastRequestStatusIIV := lastRequestStatusIIR // string as string
		lastRequestStatusIC = append(lastRequestStatusIC, lastRequestStatusIIV)
	}

	// items.CollectionFormat: "multi"
	lastRequestStatusIS := swag.JoinByFormat(lastRequestStatusIC, "multi")

	return lastRequestStatusIS
}

// bindParamGetDeploymentsUsingGET binds the parameter ownedBy
func (o *GetDeploymentsUsingGETParams) bindParamOwnedBy(formats strfmt.Registry) []string {
	ownedByIR := o.OwnedBy

	var ownedByIC []string
	for _, ownedByIIR := range ownedByIR { // explode []string

		ownedByIIV := ownedByIIR // string as string
		ownedByIC = append(ownedByIC, ownedByIIV)
	}

	// items.CollectionFormat: "multi"
	ownedByIS := swag.JoinByFormat(ownedByIC, "multi")

	return ownedByIS
}

// bindParamGetDeploymentsUsingGET binds the parameter projects
func (o *GetDeploymentsUsingGETParams) bindParamProjects(formats strfmt.Registry) []string {
	projectsIR := o.Projects

	var projectsIC []string
	for _, projectsIIR := range projectsIR { // explode []string

		projectsIIV := projectsIIR // string as string
		projectsIC = append(projectsIC, projectsIIV)
	}

	// items.CollectionFormat: "multi"
	projectsIS := swag.JoinByFormat(projectsIC, "multi")

	return projectsIS
}

// bindParamGetDeploymentsUsingGET binds the parameter requestedBy
func (o *GetDeploymentsUsingGETParams) bindParamRequestedBy(formats strfmt.Registry) []string {
	requestedByIR := o.RequestedBy

	var requestedByIC []string
	for _, requestedByIIR := range requestedByIR { // explode []string

		requestedByIIV := requestedByIIR // string as string
		requestedByIC = append(requestedByIC, requestedByIIV)
	}

	// items.CollectionFormat: "multi"
	requestedByIS := swag.JoinByFormat(requestedByIC, "multi")

	return requestedByIS
}

// bindParamGetDeploymentsUsingGET binds the parameter resourceTypes
func (o *GetDeploymentsUsingGETParams) bindParamResourceTypes(formats strfmt.Registry) []string {
	resourceTypesIR := o.ResourceTypes

	var resourceTypesIC []string
	for _, resourceTypesIIR := range resourceTypesIR { // explode []string

		resourceTypesIIV := resourceTypesIIR // string as string
		resourceTypesIC = append(resourceTypesIC, resourceTypesIIV)
	}

	// items.CollectionFormat: "multi"
	resourceTypesIS := swag.JoinByFormat(resourceTypesIC, "multi")

	return resourceTypesIS
}

// bindParamGetDeploymentsUsingGET binds the parameter status
func (o *GetDeploymentsUsingGETParams) bindParamStatus(formats strfmt.Registry) []string {
	statusIR := o.Status

	var statusIC []string
	for _, statusIIR := range statusIR { // explode []string

		statusIIV := statusIIR // string as string
		statusIC = append(statusIC, statusIIV)
	}

	// items.CollectionFormat: "multi"
	statusIS := swag.JoinByFormat(statusIC, "multi")

	return statusIS
}

// bindParamGetDeploymentsUsingGET binds the parameter tags
func (o *GetDeploymentsUsingGETParams) bindParamTags(formats strfmt.Registry) []string {
	tagsIR := o.Tags

	var tagsIC []string
	for _, tagsIIR := range tagsIR { // explode []string

		tagsIIV := tagsIIR // string as string
		tagsIC = append(tagsIC, tagsIIV)
	}

	// items.CollectionFormat: "multi"
	tagsIS := swag.JoinByFormat(tagsIC, "multi")

	return tagsIS
}
