// Code generated by go-swagger; DO NOT EDIT.

package location

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/cas-sdk-go/pkg/models"
)

// GetSingleRegionReader is a Reader for the GetSingleRegion structure.
type GetSingleRegionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSingleRegionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSingleRegionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewGetSingleRegionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSingleRegionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSingleRegionOK creates a GetSingleRegionOK with default headers values
func NewGetSingleRegionOK() *GetSingleRegionOK {
	return &GetSingleRegionOK{}
}

/*GetSingleRegionOK handles this case with default header values.

successful operation
*/
type GetSingleRegionOK struct {
	Payload *models.Region
}

func (o *GetSingleRegionOK) Error() string {
	return fmt.Sprintf("[GET /iaas/api/regions/{id}][%d] getSingleRegionOK  %+v", 200, o.Payload)
}

func (o *GetSingleRegionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Region)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSingleRegionForbidden creates a GetSingleRegionForbidden with default headers values
func NewGetSingleRegionForbidden() *GetSingleRegionForbidden {
	return &GetSingleRegionForbidden{}
}

/*GetSingleRegionForbidden handles this case with default header values.

Forbidden
*/
type GetSingleRegionForbidden struct {
}

func (o *GetSingleRegionForbidden) Error() string {
	return fmt.Sprintf("[GET /iaas/api/regions/{id}][%d] getSingleRegionForbidden ", 403)
}

func (o *GetSingleRegionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSingleRegionNotFound creates a GetSingleRegionNotFound with default headers values
func NewGetSingleRegionNotFound() *GetSingleRegionNotFound {
	return &GetSingleRegionNotFound{}
}

/*GetSingleRegionNotFound handles this case with default header values.

Not Found
*/
type GetSingleRegionNotFound struct {
}

func (o *GetSingleRegionNotFound) Error() string {
	return fmt.Sprintf("[GET /iaas/api/regions/{id}][%d] getSingleRegionNotFound ", 404)
}

func (o *GetSingleRegionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
