// Code generated by go-swagger; DO NOT EDIT.

package catalog_admin_items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/cas-sdk-go/pkg/models"
)

// GetCatalogAdminItemsUsingGETReader is a Reader for the GetCatalogAdminItemsUsingGET structure.
type GetCatalogAdminItemsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCatalogAdminItemsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCatalogAdminItemsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetCatalogAdminItemsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCatalogAdminItemsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCatalogAdminItemsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCatalogAdminItemsUsingGETOK creates a GetCatalogAdminItemsUsingGETOK with default headers values
func NewGetCatalogAdminItemsUsingGETOK() *GetCatalogAdminItemsUsingGETOK {
	return &GetCatalogAdminItemsUsingGETOK{}
}

/*GetCatalogAdminItemsUsingGETOK handles this case with default header values.

OK
*/
type GetCatalogAdminItemsUsingGETOK struct {
	Payload *models.CatalogItem
}

func (o *GetCatalogAdminItemsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /catalog/api/admin/items][%d] getCatalogAdminItemsUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetCatalogAdminItemsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CatalogItem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCatalogAdminItemsUsingGETUnauthorized creates a GetCatalogAdminItemsUsingGETUnauthorized with default headers values
func NewGetCatalogAdminItemsUsingGETUnauthorized() *GetCatalogAdminItemsUsingGETUnauthorized {
	return &GetCatalogAdminItemsUsingGETUnauthorized{}
}

/*GetCatalogAdminItemsUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCatalogAdminItemsUsingGETUnauthorized struct {
}

func (o *GetCatalogAdminItemsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /catalog/api/admin/items][%d] getCatalogAdminItemsUsingGETUnauthorized ", 401)
}

func (o *GetCatalogAdminItemsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCatalogAdminItemsUsingGETForbidden creates a GetCatalogAdminItemsUsingGETForbidden with default headers values
func NewGetCatalogAdminItemsUsingGETForbidden() *GetCatalogAdminItemsUsingGETForbidden {
	return &GetCatalogAdminItemsUsingGETForbidden{}
}

/*GetCatalogAdminItemsUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetCatalogAdminItemsUsingGETForbidden struct {
}

func (o *GetCatalogAdminItemsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /catalog/api/admin/items][%d] getCatalogAdminItemsUsingGETForbidden ", 403)
}

func (o *GetCatalogAdminItemsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCatalogAdminItemsUsingGETNotFound creates a GetCatalogAdminItemsUsingGETNotFound with default headers values
func NewGetCatalogAdminItemsUsingGETNotFound() *GetCatalogAdminItemsUsingGETNotFound {
	return &GetCatalogAdminItemsUsingGETNotFound{}
}

/*GetCatalogAdminItemsUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetCatalogAdminItemsUsingGETNotFound struct {
}

func (o *GetCatalogAdminItemsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /catalog/api/admin/items][%d] getCatalogAdminItemsUsingGETNotFound ", 404)
}

func (o *GetCatalogAdminItemsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
