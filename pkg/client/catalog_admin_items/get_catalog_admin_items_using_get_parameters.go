// Code generated by go-swagger; DO NOT EDIT.

package catalog_admin_items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetCatalogAdminItemsUsingGETParams creates a new GetCatalogAdminItemsUsingGETParams object
// with the default values initialized.
func NewGetCatalogAdminItemsUsingGETParams() *GetCatalogAdminItemsUsingGETParams {
	var ()
	return &GetCatalogAdminItemsUsingGETParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCatalogAdminItemsUsingGETParamsWithTimeout creates a new GetCatalogAdminItemsUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCatalogAdminItemsUsingGETParamsWithTimeout(timeout time.Duration) *GetCatalogAdminItemsUsingGETParams {
	var ()
	return &GetCatalogAdminItemsUsingGETParams{

		timeout: timeout,
	}
}

// NewGetCatalogAdminItemsUsingGETParamsWithContext creates a new GetCatalogAdminItemsUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetCatalogAdminItemsUsingGETParamsWithContext(ctx context.Context) *GetCatalogAdminItemsUsingGETParams {
	var ()
	return &GetCatalogAdminItemsUsingGETParams{

		Context: ctx,
	}
}

// NewGetCatalogAdminItemsUsingGETParamsWithHTTPClient creates a new GetCatalogAdminItemsUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetCatalogAdminItemsUsingGETParamsWithHTTPClient(client *http.Client) *GetCatalogAdminItemsUsingGETParams {
	var ()
	return &GetCatalogAdminItemsUsingGETParams{
		HTTPClient: client,
	}
}

/*GetCatalogAdminItemsUsingGETParams contains all the parameters to send to the API endpoint
for the get catalog admin items using g e t operation typically these are written to a http.Request
*/
type GetCatalogAdminItemsUsingGETParams struct {

	/*Page
	  Results page you want to retrieve (0..N)

	*/
	Page *int32
	/*Search
	  search

	*/
	Search *string
	/*Size
	  Number of records per page.

	*/
	Size *int32
	/*Sort
	  Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.

	*/
	Sort []string
	/*SourceIds
	  sourceIds

	*/
	SourceIds []strfmt.UUID
	/*Types
	  types

	*/
	Types []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get catalog admin items using g e t params
func (o *GetCatalogAdminItemsUsingGETParams) WithTimeout(timeout time.Duration) *GetCatalogAdminItemsUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get catalog admin items using g e t params
func (o *GetCatalogAdminItemsUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get catalog admin items using g e t params
func (o *GetCatalogAdminItemsUsingGETParams) WithContext(ctx context.Context) *GetCatalogAdminItemsUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get catalog admin items using g e t params
func (o *GetCatalogAdminItemsUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get catalog admin items using g e t params
func (o *GetCatalogAdminItemsUsingGETParams) WithHTTPClient(client *http.Client) *GetCatalogAdminItemsUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get catalog admin items using g e t params
func (o *GetCatalogAdminItemsUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPage adds the page to the get catalog admin items using g e t params
func (o *GetCatalogAdminItemsUsingGETParams) WithPage(page *int32) *GetCatalogAdminItemsUsingGETParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get catalog admin items using g e t params
func (o *GetCatalogAdminItemsUsingGETParams) SetPage(page *int32) {
	o.Page = page
}

// WithSearch adds the search to the get catalog admin items using g e t params
func (o *GetCatalogAdminItemsUsingGETParams) WithSearch(search *string) *GetCatalogAdminItemsUsingGETParams {
	o.SetSearch(search)
	return o
}

// SetSearch adds the search to the get catalog admin items using g e t params
func (o *GetCatalogAdminItemsUsingGETParams) SetSearch(search *string) {
	o.Search = search
}

// WithSize adds the size to the get catalog admin items using g e t params
func (o *GetCatalogAdminItemsUsingGETParams) WithSize(size *int32) *GetCatalogAdminItemsUsingGETParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the get catalog admin items using g e t params
func (o *GetCatalogAdminItemsUsingGETParams) SetSize(size *int32) {
	o.Size = size
}

// WithSort adds the sort to the get catalog admin items using g e t params
func (o *GetCatalogAdminItemsUsingGETParams) WithSort(sort []string) *GetCatalogAdminItemsUsingGETParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the get catalog admin items using g e t params
func (o *GetCatalogAdminItemsUsingGETParams) SetSort(sort []string) {
	o.Sort = sort
}

// WithSourceIds adds the sourceIds to the get catalog admin items using g e t params
func (o *GetCatalogAdminItemsUsingGETParams) WithSourceIds(sourceIds []strfmt.UUID) *GetCatalogAdminItemsUsingGETParams {
	o.SetSourceIds(sourceIds)
	return o
}

// SetSourceIds adds the sourceIds to the get catalog admin items using g e t params
func (o *GetCatalogAdminItemsUsingGETParams) SetSourceIds(sourceIds []strfmt.UUID) {
	o.SourceIds = sourceIds
}

// WithTypes adds the types to the get catalog admin items using g e t params
func (o *GetCatalogAdminItemsUsingGETParams) WithTypes(types []string) *GetCatalogAdminItemsUsingGETParams {
	o.SetTypes(types)
	return o
}

// SetTypes adds the types to the get catalog admin items using g e t params
func (o *GetCatalogAdminItemsUsingGETParams) SetTypes(types []string) {
	o.Types = types
}

// WriteToRequest writes these params to a swagger request
func (o *GetCatalogAdminItemsUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Page != nil {

		// query param page
		var qrPage int32
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if o.Search != nil {

		// query param search
		var qrSearch string
		if o.Search != nil {
			qrSearch = *o.Search
		}
		qSearch := qrSearch
		if qSearch != "" {
			if err := r.SetQueryParam("search", qSearch); err != nil {
				return err
			}
		}

	}

	if o.Size != nil {

		// query param size
		var qrSize int32
		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := swag.FormatInt32(qrSize)
		if qSize != "" {
			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}

	}

	valuesSort := o.Sort

	joinedSort := swag.JoinByFormat(valuesSort, "multi")
	// query array param sort
	if err := r.SetQueryParam("sort", joinedSort...); err != nil {
		return err
	}

	var valuesSourceIds []string
	for _, v := range o.SourceIds {
		valuesSourceIds = append(valuesSourceIds, v.String())
	}

	joinedSourceIds := swag.JoinByFormat(valuesSourceIds, "multi")
	// query array param sourceIds
	if err := r.SetQueryParam("sourceIds", joinedSourceIds...); err != nil {
		return err
	}

	valuesTypes := o.Types

	joinedTypes := swag.JoinByFormat(valuesTypes, "multi")
	// query array param types
	if err := r.SetQueryParam("types", joinedTypes...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
