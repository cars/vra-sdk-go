// Code generated by go-swagger; DO NOT EDIT.

package blueprint_deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetRequestEventsUsingGETParams creates a new GetRequestEventsUsingGETParams object
// with the default values initialized.
func NewGetRequestEventsUsingGETParams() *GetRequestEventsUsingGETParams {
	var (
		orderByDefault = string("createdAt DESC")
		pageDefault    = int32(1)
		sizeDefault    = int32(1000)
	)
	return &GetRequestEventsUsingGETParams{
		OrderBy: &orderByDefault,
		Page:    &pageDefault,
		Size:    &sizeDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetRequestEventsUsingGETParamsWithTimeout creates a new GetRequestEventsUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetRequestEventsUsingGETParamsWithTimeout(timeout time.Duration) *GetRequestEventsUsingGETParams {
	var (
		orderByDefault = string("createdAt DESC")
		pageDefault    = int32(1)
		sizeDefault    = int32(1000)
	)
	return &GetRequestEventsUsingGETParams{
		OrderBy: &orderByDefault,
		Page:    &pageDefault,
		Size:    &sizeDefault,

		timeout: timeout,
	}
}

// NewGetRequestEventsUsingGETParamsWithContext creates a new GetRequestEventsUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetRequestEventsUsingGETParamsWithContext(ctx context.Context) *GetRequestEventsUsingGETParams {
	var (
		orderByDefault = string("createdAt DESC")
		pageDefault    = int32(1)
		sizeDefault    = int32(1000)
	)
	return &GetRequestEventsUsingGETParams{
		OrderBy: &orderByDefault,
		Page:    &pageDefault,
		Size:    &sizeDefault,

		Context: ctx,
	}
}

// NewGetRequestEventsUsingGETParamsWithHTTPClient creates a new GetRequestEventsUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetRequestEventsUsingGETParamsWithHTTPClient(client *http.Client) *GetRequestEventsUsingGETParams {
	var (
		orderByDefault = string("createdAt DESC")
		pageDefault    = int32(1)
		sizeDefault    = int32(1000)
	)
	return &GetRequestEventsUsingGETParams{
		OrderBy:    &orderByDefault,
		Page:       &pageDefault,
		Size:       &sizeDefault,
		HTTPClient: client,
	}
}

/*GetRequestEventsUsingGETParams contains all the parameters to send to the API endpoint
for the get request events using g e t operation typically these are written to a http.Request
*/
type GetRequestEventsUsingGETParams struct {

	/*DeploymentID
	  deploymentId

	*/
	DeploymentID string
	/*OrderBy
	  Sorts events (e.g. 'createdAt DESC').

	*/
	OrderBy *string
	/*Page
	  Page index

	*/
	Page *int32
	/*RequestID
	  Request Id filter

	*/
	RequestID *string
	/*Size
	  Page size

	*/
	Size *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get request events using g e t params
func (o *GetRequestEventsUsingGETParams) WithTimeout(timeout time.Duration) *GetRequestEventsUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get request events using g e t params
func (o *GetRequestEventsUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get request events using g e t params
func (o *GetRequestEventsUsingGETParams) WithContext(ctx context.Context) *GetRequestEventsUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get request events using g e t params
func (o *GetRequestEventsUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get request events using g e t params
func (o *GetRequestEventsUsingGETParams) WithHTTPClient(client *http.Client) *GetRequestEventsUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get request events using g e t params
func (o *GetRequestEventsUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDeploymentID adds the deploymentID to the get request events using g e t params
func (o *GetRequestEventsUsingGETParams) WithDeploymentID(deploymentID string) *GetRequestEventsUsingGETParams {
	o.SetDeploymentID(deploymentID)
	return o
}

// SetDeploymentID adds the deploymentId to the get request events using g e t params
func (o *GetRequestEventsUsingGETParams) SetDeploymentID(deploymentID string) {
	o.DeploymentID = deploymentID
}

// WithOrderBy adds the orderBy to the get request events using g e t params
func (o *GetRequestEventsUsingGETParams) WithOrderBy(orderBy *string) *GetRequestEventsUsingGETParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the get request events using g e t params
func (o *GetRequestEventsUsingGETParams) SetOrderBy(orderBy *string) {
	o.OrderBy = orderBy
}

// WithPage adds the page to the get request events using g e t params
func (o *GetRequestEventsUsingGETParams) WithPage(page *int32) *GetRequestEventsUsingGETParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get request events using g e t params
func (o *GetRequestEventsUsingGETParams) SetPage(page *int32) {
	o.Page = page
}

// WithRequestID adds the requestID to the get request events using g e t params
func (o *GetRequestEventsUsingGETParams) WithRequestID(requestID *string) *GetRequestEventsUsingGETParams {
	o.SetRequestID(requestID)
	return o
}

// SetRequestID adds the requestId to the get request events using g e t params
func (o *GetRequestEventsUsingGETParams) SetRequestID(requestID *string) {
	o.RequestID = requestID
}

// WithSize adds the size to the get request events using g e t params
func (o *GetRequestEventsUsingGETParams) WithSize(size *int32) *GetRequestEventsUsingGETParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the get request events using g e t params
func (o *GetRequestEventsUsingGETParams) SetSize(size *int32) {
	o.Size = size
}

// WriteToRequest writes these params to a swagger request
func (o *GetRequestEventsUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param deploymentId
	if err := r.SetPathParam("deploymentId", o.DeploymentID); err != nil {
		return err
	}

	if o.OrderBy != nil {

		// query param orderBy
		var qrOrderBy string
		if o.OrderBy != nil {
			qrOrderBy = *o.OrderBy
		}
		qOrderBy := qrOrderBy
		if qOrderBy != "" {
			if err := r.SetQueryParam("orderBy", qOrderBy); err != nil {
				return err
			}
		}

	}

	if o.Page != nil {

		// query param page
		var qrPage int32
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if o.RequestID != nil {

		// query param requestId
		var qrRequestID string
		if o.RequestID != nil {
			qrRequestID = *o.RequestID
		}
		qRequestID := qrRequestID
		if qRequestID != "" {
			if err := r.SetQueryParam("requestId", qRequestID); err != nil {
				return err
			}
		}

	}

	if o.Size != nil {

		// query param size
		var qrSize int32
		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := swag.FormatInt32(qrSize)
		if qSize != "" {
			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
