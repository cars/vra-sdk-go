// Code generated by go-swagger; DO NOT EDIT.

package compute_gateway

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// ReconfigureComputeGatewayReader is a Reader for the ReconfigureComputeGateway structure.
type ReconfigureComputeGatewayReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReconfigureComputeGatewayReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewReconfigureComputeGatewayAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReconfigureComputeGatewayBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReconfigureComputeGatewayForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewReconfigureComputeGatewayAccepted creates a ReconfigureComputeGatewayAccepted with default headers values
func NewReconfigureComputeGatewayAccepted() *ReconfigureComputeGatewayAccepted {
	return &ReconfigureComputeGatewayAccepted{}
}

/* ReconfigureComputeGatewayAccepted describes a response with status code 202, with default header values.

successful operation
*/
type ReconfigureComputeGatewayAccepted struct {
	Payload *models.RequestTracker
}

func (o *ReconfigureComputeGatewayAccepted) Error() string {
	return fmt.Sprintf("[POST /iaas/api/compute-gateways/{id}/operations/reconfigure][%d] reconfigureComputeGatewayAccepted  %+v", 202, o.Payload)
}
func (o *ReconfigureComputeGatewayAccepted) GetPayload() *models.RequestTracker {
	return o.Payload
}

func (o *ReconfigureComputeGatewayAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestTracker)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReconfigureComputeGatewayBadRequest creates a ReconfigureComputeGatewayBadRequest with default headers values
func NewReconfigureComputeGatewayBadRequest() *ReconfigureComputeGatewayBadRequest {
	return &ReconfigureComputeGatewayBadRequest{}
}

/* ReconfigureComputeGatewayBadRequest describes a response with status code 400, with default header values.

NAT rules cannot be null
*/
type ReconfigureComputeGatewayBadRequest struct {
	Payload *models.Error
}

func (o *ReconfigureComputeGatewayBadRequest) Error() string {
	return fmt.Sprintf("[POST /iaas/api/compute-gateways/{id}/operations/reconfigure][%d] reconfigureComputeGatewayBadRequest  %+v", 400, o.Payload)
}
func (o *ReconfigureComputeGatewayBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ReconfigureComputeGatewayBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReconfigureComputeGatewayForbidden creates a ReconfigureComputeGatewayForbidden with default headers values
func NewReconfigureComputeGatewayForbidden() *ReconfigureComputeGatewayForbidden {
	return &ReconfigureComputeGatewayForbidden{}
}

/* ReconfigureComputeGatewayForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ReconfigureComputeGatewayForbidden struct {
	Payload *models.ServiceErrorResponse
}

func (o *ReconfigureComputeGatewayForbidden) Error() string {
	return fmt.Sprintf("[POST /iaas/api/compute-gateways/{id}/operations/reconfigure][%d] reconfigureComputeGatewayForbidden  %+v", 403, o.Payload)
}
func (o *ReconfigureComputeGatewayForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *ReconfigureComputeGatewayForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
