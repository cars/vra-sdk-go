// Code generated by go-swagger; DO NOT EDIT.

package property_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// UpdatePropertyGroupUsingPUTReader is a Reader for the UpdatePropertyGroupUsingPUT structure.
type UpdatePropertyGroupUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePropertyGroupUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePropertyGroupUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdatePropertyGroupUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdatePropertyGroupUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdatePropertyGroupUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdatePropertyGroupUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdatePropertyGroupUsingPUTOK creates a UpdatePropertyGroupUsingPUTOK with default headers values
func NewUpdatePropertyGroupUsingPUTOK() *UpdatePropertyGroupUsingPUTOK {
	return &UpdatePropertyGroupUsingPUTOK{}
}

/* UpdatePropertyGroupUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type UpdatePropertyGroupUsingPUTOK struct {
	Payload *models.PropertyGroup
}

func (o *UpdatePropertyGroupUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /properties/api/property-groups/{propertyGroupId}][%d] updatePropertyGroupUsingPUTOK  %+v", 200, o.Payload)
}
func (o *UpdatePropertyGroupUsingPUTOK) GetPayload() *models.PropertyGroup {
	return o.Payload
}

func (o *UpdatePropertyGroupUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PropertyGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePropertyGroupUsingPUTBadRequest creates a UpdatePropertyGroupUsingPUTBadRequest with default headers values
func NewUpdatePropertyGroupUsingPUTBadRequest() *UpdatePropertyGroupUsingPUTBadRequest {
	return &UpdatePropertyGroupUsingPUTBadRequest{}
}

/* UpdatePropertyGroupUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdatePropertyGroupUsingPUTBadRequest struct {
	Payload *models.Error
}

func (o *UpdatePropertyGroupUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /properties/api/property-groups/{propertyGroupId}][%d] updatePropertyGroupUsingPUTBadRequest  %+v", 400, o.Payload)
}
func (o *UpdatePropertyGroupUsingPUTBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdatePropertyGroupUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePropertyGroupUsingPUTUnauthorized creates a UpdatePropertyGroupUsingPUTUnauthorized with default headers values
func NewUpdatePropertyGroupUsingPUTUnauthorized() *UpdatePropertyGroupUsingPUTUnauthorized {
	return &UpdatePropertyGroupUsingPUTUnauthorized{}
}

/* UpdatePropertyGroupUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdatePropertyGroupUsingPUTUnauthorized struct {
}

func (o *UpdatePropertyGroupUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /properties/api/property-groups/{propertyGroupId}][%d] updatePropertyGroupUsingPUTUnauthorized ", 401)
}

func (o *UpdatePropertyGroupUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePropertyGroupUsingPUTForbidden creates a UpdatePropertyGroupUsingPUTForbidden with default headers values
func NewUpdatePropertyGroupUsingPUTForbidden() *UpdatePropertyGroupUsingPUTForbidden {
	return &UpdatePropertyGroupUsingPUTForbidden{}
}

/* UpdatePropertyGroupUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdatePropertyGroupUsingPUTForbidden struct {
}

func (o *UpdatePropertyGroupUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /properties/api/property-groups/{propertyGroupId}][%d] updatePropertyGroupUsingPUTForbidden ", 403)
}

func (o *UpdatePropertyGroupUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePropertyGroupUsingPUTNotFound creates a UpdatePropertyGroupUsingPUTNotFound with default headers values
func NewUpdatePropertyGroupUsingPUTNotFound() *UpdatePropertyGroupUsingPUTNotFound {
	return &UpdatePropertyGroupUsingPUTNotFound{}
}

/* UpdatePropertyGroupUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdatePropertyGroupUsingPUTNotFound struct {
	Payload *models.Error
}

func (o *UpdatePropertyGroupUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /properties/api/property-groups/{propertyGroupId}][%d] updatePropertyGroupUsingPUTNotFound  %+v", 404, o.Payload)
}
func (o *UpdatePropertyGroupUsingPUTNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdatePropertyGroupUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
