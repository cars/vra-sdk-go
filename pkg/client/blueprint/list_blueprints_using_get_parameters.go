// Code generated by go-swagger; DO NOT EDIT.

package blueprint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListBlueprintsUsingGETParams creates a new ListBlueprintsUsingGETParams object
// with the default values initialized.
func NewListBlueprintsUsingGETParams() *ListBlueprintsUsingGETParams {
	var (
		expandDefault  = bool(true)
		orderByDefault = string("updatedAt DESC")
		pageDefault    = int32(1)
		sizeDefault    = int32(20)
	)
	return &ListBlueprintsUsingGETParams{
		Expand:  &expandDefault,
		OrderBy: &orderByDefault,
		Page:    &pageDefault,
		Size:    &sizeDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewListBlueprintsUsingGETParamsWithTimeout creates a new ListBlueprintsUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListBlueprintsUsingGETParamsWithTimeout(timeout time.Duration) *ListBlueprintsUsingGETParams {
	var (
		expandDefault  = bool(true)
		orderByDefault = string("updatedAt DESC")
		pageDefault    = int32(1)
		sizeDefault    = int32(20)
	)
	return &ListBlueprintsUsingGETParams{
		Expand:  &expandDefault,
		OrderBy: &orderByDefault,
		Page:    &pageDefault,
		Size:    &sizeDefault,

		timeout: timeout,
	}
}

// NewListBlueprintsUsingGETParamsWithContext creates a new ListBlueprintsUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewListBlueprintsUsingGETParamsWithContext(ctx context.Context) *ListBlueprintsUsingGETParams {
	var (
		expandDefault  = bool(true)
		orderByDefault = string("updatedAt DESC")
		pageDefault    = int32(1)
		sizeDefault    = int32(20)
	)
	return &ListBlueprintsUsingGETParams{
		Expand:  &expandDefault,
		OrderBy: &orderByDefault,
		Page:    &pageDefault,
		Size:    &sizeDefault,

		Context: ctx,
	}
}

// NewListBlueprintsUsingGETParamsWithHTTPClient creates a new ListBlueprintsUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListBlueprintsUsingGETParamsWithHTTPClient(client *http.Client) *ListBlueprintsUsingGETParams {
	var (
		expandDefault  = bool(true)
		orderByDefault = string("updatedAt DESC")
		pageDefault    = int32(1)
		sizeDefault    = int32(20)
	)
	return &ListBlueprintsUsingGETParams{
		Expand:     &expandDefault,
		OrderBy:    &orderByDefault,
		Page:       &pageDefault,
		Size:       &sizeDefault,
		HTTPClient: client,
	}
}

/*ListBlueprintsUsingGETParams contains all the parameters to send to the API endpoint
for the list blueprints using g e t operation typically these are written to a http.Request
*/
type ListBlueprintsUsingGETParams struct {

	/*Expand
	  Expand with content

	*/
	Expand *bool
	/*Fields
	  Fields to include in content

	*/
	Fields []string
	/*Name
	  Filter by name

	*/
	Name *string
	/*OrderBy
	  Sorts blueprints (e.g. 'name ASC').

	*/
	OrderBy *string
	/*Page
	  Page index

	*/
	Page *int32
	/*Projects
	  A comma-separated list. Results must be associated with one of these project IDs.

	*/
	Projects []string
	/*Released
	  Filter blueprints with at least one released version

	*/
	Released *bool
	/*Search
	  Search by name and description

	*/
	Search *string
	/*Size
	  Page size

	*/
	Size *int32
	/*Tags
	  Tags filter

	*/
	Tags []string
	/*Versioned
	  Filter blueprints with at least one version

	*/
	Versioned *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) WithTimeout(timeout time.Duration) *ListBlueprintsUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) WithContext(ctx context.Context) *ListBlueprintsUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) WithHTTPClient(client *http.Client) *ListBlueprintsUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExpand adds the expand to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) WithExpand(expand *bool) *ListBlueprintsUsingGETParams {
	o.SetExpand(expand)
	return o
}

// SetExpand adds the expand to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) SetExpand(expand *bool) {
	o.Expand = expand
}

// WithFields adds the fields to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) WithFields(fields []string) *ListBlueprintsUsingGETParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) SetFields(fields []string) {
	o.Fields = fields
}

// WithName adds the name to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) WithName(name *string) *ListBlueprintsUsingGETParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) SetName(name *string) {
	o.Name = name
}

// WithOrderBy adds the orderBy to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) WithOrderBy(orderBy *string) *ListBlueprintsUsingGETParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) SetOrderBy(orderBy *string) {
	o.OrderBy = orderBy
}

// WithPage adds the page to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) WithPage(page *int32) *ListBlueprintsUsingGETParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) SetPage(page *int32) {
	o.Page = page
}

// WithProjects adds the projects to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) WithProjects(projects []string) *ListBlueprintsUsingGETParams {
	o.SetProjects(projects)
	return o
}

// SetProjects adds the projects to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) SetProjects(projects []string) {
	o.Projects = projects
}

// WithReleased adds the released to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) WithReleased(released *bool) *ListBlueprintsUsingGETParams {
	o.SetReleased(released)
	return o
}

// SetReleased adds the released to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) SetReleased(released *bool) {
	o.Released = released
}

// WithSearch adds the search to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) WithSearch(search *string) *ListBlueprintsUsingGETParams {
	o.SetSearch(search)
	return o
}

// SetSearch adds the search to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) SetSearch(search *string) {
	o.Search = search
}

// WithSize adds the size to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) WithSize(size *int32) *ListBlueprintsUsingGETParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) SetSize(size *int32) {
	o.Size = size
}

// WithTags adds the tags to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) WithTags(tags []string) *ListBlueprintsUsingGETParams {
	o.SetTags(tags)
	return o
}

// SetTags adds the tags to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) SetTags(tags []string) {
	o.Tags = tags
}

// WithVersioned adds the versioned to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) WithVersioned(versioned *bool) *ListBlueprintsUsingGETParams {
	o.SetVersioned(versioned)
	return o
}

// SetVersioned adds the versioned to the list blueprints using g e t params
func (o *ListBlueprintsUsingGETParams) SetVersioned(versioned *bool) {
	o.Versioned = versioned
}

// WriteToRequest writes these params to a swagger request
func (o *ListBlueprintsUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Expand != nil {

		// query param expand
		var qrExpand bool
		if o.Expand != nil {
			qrExpand = *o.Expand
		}
		qExpand := swag.FormatBool(qrExpand)
		if qExpand != "" {
			if err := r.SetQueryParam("expand", qExpand); err != nil {
				return err
			}
		}

	}

	valuesFields := o.Fields

	joinedFields := swag.JoinByFormat(valuesFields, "multi")
	// query array param fields
	if err := r.SetQueryParam("fields", joinedFields...); err != nil {
		return err
	}

	if o.Name != nil {

		// query param name
		var qrName string
		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {
			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}

	}

	if o.OrderBy != nil {

		// query param orderBy
		var qrOrderBy string
		if o.OrderBy != nil {
			qrOrderBy = *o.OrderBy
		}
		qOrderBy := qrOrderBy
		if qOrderBy != "" {
			if err := r.SetQueryParam("orderBy", qOrderBy); err != nil {
				return err
			}
		}

	}

	if o.Page != nil {

		// query param page
		var qrPage int32
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	valuesProjects := o.Projects

	joinedProjects := swag.JoinByFormat(valuesProjects, "multi")
	// query array param projects
	if err := r.SetQueryParam("projects", joinedProjects...); err != nil {
		return err
	}

	if o.Released != nil {

		// query param released
		var qrReleased bool
		if o.Released != nil {
			qrReleased = *o.Released
		}
		qReleased := swag.FormatBool(qrReleased)
		if qReleased != "" {
			if err := r.SetQueryParam("released", qReleased); err != nil {
				return err
			}
		}

	}

	if o.Search != nil {

		// query param search
		var qrSearch string
		if o.Search != nil {
			qrSearch = *o.Search
		}
		qSearch := qrSearch
		if qSearch != "" {
			if err := r.SetQueryParam("search", qSearch); err != nil {
				return err
			}
		}

	}

	if o.Size != nil {

		// query param size
		var qrSize int32
		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := swag.FormatInt32(qrSize)
		if qSize != "" {
			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}

	}

	valuesTags := o.Tags

	joinedTags := swag.JoinByFormat(valuesTags, "multi")
	// query array param tags
	if err := r.SetQueryParam("tags", joinedTags...); err != nil {
		return err
	}

	if o.Versioned != nil {

		// query param versioned
		var qrVersioned bool
		if o.Versioned != nil {
			qrVersioned = *o.Versioned
		}
		qVersioned := swag.FormatBool(qrVersioned)
		if qVersioned != "" {
			if err := r.SetQueryParam("versioned", qVersioned); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
