// Code generated by go-swagger; DO NOT EDIT.

package blueprint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewUnReleaseBlueprintVersionUsingPOSTParams creates a new UnReleaseBlueprintVersionUsingPOSTParams object
// with the default values initialized.
func NewUnReleaseBlueprintVersionUsingPOSTParams() *UnReleaseBlueprintVersionUsingPOSTParams {
	var ()
	return &UnReleaseBlueprintVersionUsingPOSTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUnReleaseBlueprintVersionUsingPOSTParamsWithTimeout creates a new UnReleaseBlueprintVersionUsingPOSTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUnReleaseBlueprintVersionUsingPOSTParamsWithTimeout(timeout time.Duration) *UnReleaseBlueprintVersionUsingPOSTParams {
	var ()
	return &UnReleaseBlueprintVersionUsingPOSTParams{

		timeout: timeout,
	}
}

// NewUnReleaseBlueprintVersionUsingPOSTParamsWithContext creates a new UnReleaseBlueprintVersionUsingPOSTParams object
// with the default values initialized, and the ability to set a context for a request
func NewUnReleaseBlueprintVersionUsingPOSTParamsWithContext(ctx context.Context) *UnReleaseBlueprintVersionUsingPOSTParams {
	var ()
	return &UnReleaseBlueprintVersionUsingPOSTParams{

		Context: ctx,
	}
}

// NewUnReleaseBlueprintVersionUsingPOSTParamsWithHTTPClient creates a new UnReleaseBlueprintVersionUsingPOSTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUnReleaseBlueprintVersionUsingPOSTParamsWithHTTPClient(client *http.Client) *UnReleaseBlueprintVersionUsingPOSTParams {
	var ()
	return &UnReleaseBlueprintVersionUsingPOSTParams{
		HTTPClient: client,
	}
}

/*UnReleaseBlueprintVersionUsingPOSTParams contains all the parameters to send to the API endpoint
for the un release blueprint version using p o s t operation typically these are written to a http.Request
*/
type UnReleaseBlueprintVersionUsingPOSTParams struct {

	/*BlueprintID
	  blueprintId

	*/
	BlueprintID strfmt.UUID
	/*Version
	  version

	*/
	Version string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the un release blueprint version using p o s t params
func (o *UnReleaseBlueprintVersionUsingPOSTParams) WithTimeout(timeout time.Duration) *UnReleaseBlueprintVersionUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the un release blueprint version using p o s t params
func (o *UnReleaseBlueprintVersionUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the un release blueprint version using p o s t params
func (o *UnReleaseBlueprintVersionUsingPOSTParams) WithContext(ctx context.Context) *UnReleaseBlueprintVersionUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the un release blueprint version using p o s t params
func (o *UnReleaseBlueprintVersionUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the un release blueprint version using p o s t params
func (o *UnReleaseBlueprintVersionUsingPOSTParams) WithHTTPClient(client *http.Client) *UnReleaseBlueprintVersionUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the un release blueprint version using p o s t params
func (o *UnReleaseBlueprintVersionUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBlueprintID adds the blueprintID to the un release blueprint version using p o s t params
func (o *UnReleaseBlueprintVersionUsingPOSTParams) WithBlueprintID(blueprintID strfmt.UUID) *UnReleaseBlueprintVersionUsingPOSTParams {
	o.SetBlueprintID(blueprintID)
	return o
}

// SetBlueprintID adds the blueprintId to the un release blueprint version using p o s t params
func (o *UnReleaseBlueprintVersionUsingPOSTParams) SetBlueprintID(blueprintID strfmt.UUID) {
	o.BlueprintID = blueprintID
}

// WithVersion adds the version to the un release blueprint version using p o s t params
func (o *UnReleaseBlueprintVersionUsingPOSTParams) WithVersion(version string) *UnReleaseBlueprintVersionUsingPOSTParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the un release blueprint version using p o s t params
func (o *UnReleaseBlueprintVersionUsingPOSTParams) SetVersion(version string) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *UnReleaseBlueprintVersionUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param blueprintId
	if err := r.SetPathParam("blueprintId", o.BlueprintID.String()); err != nil {
		return err
	}

	// path param version
	if err := r.SetPathParam("version", o.Version); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
