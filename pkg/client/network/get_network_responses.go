// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetNetworkReader is a Reader for the GetNetwork structure.
type GetNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetNetworkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNetworkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetNetworkOK creates a GetNetworkOK with default headers values
func NewGetNetworkOK() *GetNetworkOK {
	return &GetNetworkOK{}
}

/* GetNetworkOK describes a response with status code 200, with default header values.

successful operation
*/
type GetNetworkOK struct {
	Payload *models.Network
}

func (o *GetNetworkOK) Error() string {
	return fmt.Sprintf("[GET /iaas/api/networks/{id}][%d] getNetworkOK  %+v", 200, o.Payload)
}
func (o *GetNetworkOK) GetPayload() *models.Network {
	return o.Payload
}

func (o *GetNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Network)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkForbidden creates a GetNetworkForbidden with default headers values
func NewGetNetworkForbidden() *GetNetworkForbidden {
	return &GetNetworkForbidden{}
}

/* GetNetworkForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetNetworkForbidden struct {
	Payload *models.ServiceErrorResponse
}

func (o *GetNetworkForbidden) Error() string {
	return fmt.Sprintf("[GET /iaas/api/networks/{id}][%d] getNetworkForbidden  %+v", 403, o.Payload)
}
func (o *GetNetworkForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *GetNetworkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkNotFound creates a GetNetworkNotFound with default headers values
func NewGetNetworkNotFound() *GetNetworkNotFound {
	return &GetNetworkNotFound{}
}

/* GetNetworkNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetNetworkNotFound struct {
	Payload *models.Error
}

func (o *GetNetworkNotFound) Error() string {
	return fmt.Sprintf("[GET /iaas/api/networks/{id}][%d] getNetworkNotFound  %+v", 404, o.Payload)
}
func (o *GetNetworkNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNetworkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
