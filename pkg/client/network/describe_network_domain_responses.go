// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/cas-sdk-go/pkg/models"
)

// DescribeNetworkDomainReader is a Reader for the DescribeNetworkDomain structure.
type DescribeNetworkDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DescribeNetworkDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDescribeNetworkDomainOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewDescribeNetworkDomainForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDescribeNetworkDomainNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDescribeNetworkDomainOK creates a DescribeNetworkDomainOK with default headers values
func NewDescribeNetworkDomainOK() *DescribeNetworkDomainOK {
	return &DescribeNetworkDomainOK{}
}

/*DescribeNetworkDomainOK handles this case with default header values.

successful operation
*/
type DescribeNetworkDomainOK struct {
	Payload *models.NetworkDomain
}

func (o *DescribeNetworkDomainOK) Error() string {
	return fmt.Sprintf("[GET /iaas/api/network-domains/{id}][%d] describeNetworkDomainOK  %+v", 200, o.Payload)
}

func (o *DescribeNetworkDomainOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkDomain)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeNetworkDomainForbidden creates a DescribeNetworkDomainForbidden with default headers values
func NewDescribeNetworkDomainForbidden() *DescribeNetworkDomainForbidden {
	return &DescribeNetworkDomainForbidden{}
}

/*DescribeNetworkDomainForbidden handles this case with default header values.

Forbidden
*/
type DescribeNetworkDomainForbidden struct {
}

func (o *DescribeNetworkDomainForbidden) Error() string {
	return fmt.Sprintf("[GET /iaas/api/network-domains/{id}][%d] describeNetworkDomainForbidden ", 403)
}

func (o *DescribeNetworkDomainForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDescribeNetworkDomainNotFound creates a DescribeNetworkDomainNotFound with default headers values
func NewDescribeNetworkDomainNotFound() *DescribeNetworkDomainNotFound {
	return &DescribeNetworkDomainNotFound{}
}

/*DescribeNetworkDomainNotFound handles this case with default header values.

Not Found
*/
type DescribeNetworkDomainNotFound struct {
}

func (o *DescribeNetworkDomainNotFound) Error() string {
	return fmt.Sprintf("[GET /iaas/api/network-domains/{id}][%d] describeNetworkDomainNotFound ", 404)
}

func (o *DescribeNetworkDomainNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
