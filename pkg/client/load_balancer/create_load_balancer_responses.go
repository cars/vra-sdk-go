// Code generated by go-swagger; DO NOT EDIT.

package load_balancer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/cas-sdk-go/pkg/models"
)

// CreateLoadBalancerReader is a Reader for the CreateLoadBalancer structure.
type CreateLoadBalancerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateLoadBalancerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateLoadBalancerCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateLoadBalancerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateLoadBalancerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateLoadBalancerCreated creates a CreateLoadBalancerCreated with default headers values
func NewCreateLoadBalancerCreated() *CreateLoadBalancerCreated {
	return &CreateLoadBalancerCreated{}
}

/*CreateLoadBalancerCreated handles this case with default header values.

successful operation
*/
type CreateLoadBalancerCreated struct {
	Payload *models.RequestTracker
}

func (o *CreateLoadBalancerCreated) Error() string {
	return fmt.Sprintf("[POST /iaas/api/load-balancers][%d] createLoadBalancerCreated  %+v", 201, o.Payload)
}

func (o *CreateLoadBalancerCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestTracker)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLoadBalancerBadRequest creates a CreateLoadBalancerBadRequest with default headers values
func NewCreateLoadBalancerBadRequest() *CreateLoadBalancerBadRequest {
	return &CreateLoadBalancerBadRequest{}
}

/*CreateLoadBalancerBadRequest handles this case with default header values.

Invalid Request - bad data
*/
type CreateLoadBalancerBadRequest struct {
}

func (o *CreateLoadBalancerBadRequest) Error() string {
	return fmt.Sprintf("[POST /iaas/api/load-balancers][%d] createLoadBalancerBadRequest ", 400)
}

func (o *CreateLoadBalancerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateLoadBalancerForbidden creates a CreateLoadBalancerForbidden with default headers values
func NewCreateLoadBalancerForbidden() *CreateLoadBalancerForbidden {
	return &CreateLoadBalancerForbidden{}
}

/*CreateLoadBalancerForbidden handles this case with default header values.

Forbidden
*/
type CreateLoadBalancerForbidden struct {
}

func (o *CreateLoadBalancerForbidden) Error() string {
	return fmt.Sprintf("[POST /iaas/api/load-balancers][%d] createLoadBalancerForbidden ", 403)
}

func (o *CreateLoadBalancerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
