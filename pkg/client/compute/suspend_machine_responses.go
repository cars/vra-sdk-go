// Code generated by go-swagger; DO NOT EDIT.

package compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SuspendMachineReader is a Reader for the SuspendMachine structure.
type SuspendMachineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SuspendMachineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 403:
		result := NewSuspendMachineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSuspendMachineNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSuspendMachineForbidden creates a SuspendMachineForbidden with default headers values
func NewSuspendMachineForbidden() *SuspendMachineForbidden {
	return &SuspendMachineForbidden{}
}

/*SuspendMachineForbidden handles this case with default header values.

Forbidden
*/
type SuspendMachineForbidden struct {
}

func (o *SuspendMachineForbidden) Error() string {
	return fmt.Sprintf("[POST /iaas/api/machines/{id}/operations/suspend][%d] suspendMachineForbidden ", 403)
}

func (o *SuspendMachineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSuspendMachineNotFound creates a SuspendMachineNotFound with default headers values
func NewSuspendMachineNotFound() *SuspendMachineNotFound {
	return &SuspendMachineNotFound{}
}

/*SuspendMachineNotFound handles this case with default header values.

Not Found
*/
type SuspendMachineNotFound struct {
}

func (o *SuspendMachineNotFound) Error() string {
	return fmt.Sprintf("[POST /iaas/api/machines/{id}/operations/suspend][%d] suspendMachineNotFound ", 404)
}

func (o *SuspendMachineNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
