// Code generated by go-swagger; DO NOT EDIT.

package image_profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/cas-sdk-go/pkg/models"
)

// UpdateImageReader is a Reader for the UpdateImage structure.
type UpdateImageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateImageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateImageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewUpdateImageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateImageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateImageOK creates a UpdateImageOK with default headers values
func NewUpdateImageOK() *UpdateImageOK {
	return &UpdateImageOK{}
}

/*UpdateImageOK handles this case with default header values.

successful operation
*/
type UpdateImageOK struct {
	Payload *models.ImageProfile
}

func (o *UpdateImageOK) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/image-profiles/{id}][%d] updateImageOK  %+v", 200, o.Payload)
}

func (o *UpdateImageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImageProfile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateImageForbidden creates a UpdateImageForbidden with default headers values
func NewUpdateImageForbidden() *UpdateImageForbidden {
	return &UpdateImageForbidden{}
}

/*UpdateImageForbidden handles this case with default header values.

Forbidden
*/
type UpdateImageForbidden struct {
}

func (o *UpdateImageForbidden) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/image-profiles/{id}][%d] updateImageForbidden ", 403)
}

func (o *UpdateImageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateImageNotFound creates a UpdateImageNotFound with default headers values
func NewUpdateImageNotFound() *UpdateImageNotFound {
	return &UpdateImageNotFound{}
}

/*UpdateImageNotFound handles this case with default header values.

Not Found
*/
type UpdateImageNotFound struct {
}

func (o *UpdateImageNotFound) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/image-profiles/{id}][%d] updateImageNotFound ", 404)
}

func (o *UpdateImageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
