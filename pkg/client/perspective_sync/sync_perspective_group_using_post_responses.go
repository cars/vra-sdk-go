// Code generated by go-swagger; DO NOT EDIT.

package perspective_sync

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// SyncPerspectiveGroupUsingPOSTReader is a Reader for the SyncPerspectiveGroupUsingPOST structure.
type SyncPerspectiveGroupUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SyncPerspectiveGroupUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSyncPerspectiveGroupUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewSyncPerspectiveGroupUsingPOSTAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSyncPerspectiveGroupUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSyncPerspectiveGroupUsingPOSTOK creates a SyncPerspectiveGroupUsingPOSTOK with default headers values
func NewSyncPerspectiveGroupUsingPOSTOK() *SyncPerspectiveGroupUsingPOSTOK {
	return &SyncPerspectiveGroupUsingPOSTOK{}
}

/* SyncPerspectiveGroupUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type SyncPerspectiveGroupUsingPOSTOK struct {
	Payload *models.ResponseEntity
}

func (o *SyncPerspectiveGroupUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /price/api/cloudhealth/perspective-sync][%d] syncPerspectiveGroupUsingPOSTOK  %+v", 200, o.Payload)
}
func (o *SyncPerspectiveGroupUsingPOSTOK) GetPayload() *models.ResponseEntity {
	return o.Payload
}

func (o *SyncPerspectiveGroupUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSyncPerspectiveGroupUsingPOSTAccepted creates a SyncPerspectiveGroupUsingPOSTAccepted with default headers values
func NewSyncPerspectiveGroupUsingPOSTAccepted() *SyncPerspectiveGroupUsingPOSTAccepted {
	return &SyncPerspectiveGroupUsingPOSTAccepted{}
}

/* SyncPerspectiveGroupUsingPOSTAccepted describes a response with status code 202, with default header values.

OK
*/
type SyncPerspectiveGroupUsingPOSTAccepted struct {
	Payload *models.ResponseEntity
}

func (o *SyncPerspectiveGroupUsingPOSTAccepted) Error() string {
	return fmt.Sprintf("[POST /price/api/cloudhealth/perspective-sync][%d] syncPerspectiveGroupUsingPOSTAccepted  %+v", 202, o.Payload)
}
func (o *SyncPerspectiveGroupUsingPOSTAccepted) GetPayload() *models.ResponseEntity {
	return o.Payload
}

func (o *SyncPerspectiveGroupUsingPOSTAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSyncPerspectiveGroupUsingPOSTUnauthorized creates a SyncPerspectiveGroupUsingPOSTUnauthorized with default headers values
func NewSyncPerspectiveGroupUsingPOSTUnauthorized() *SyncPerspectiveGroupUsingPOSTUnauthorized {
	return &SyncPerspectiveGroupUsingPOSTUnauthorized{}
}

/* SyncPerspectiveGroupUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SyncPerspectiveGroupUsingPOSTUnauthorized struct {
}

func (o *SyncPerspectiveGroupUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /price/api/cloudhealth/perspective-sync][%d] syncPerspectiveGroupUsingPOSTUnauthorized ", 401)
}

func (o *SyncPerspectiveGroupUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
