// Code generated by go-swagger; DO NOT EDIT.

package fabric_network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetVsphereFabricNetworkReader is a Reader for the GetVsphereFabricNetwork structure.
type GetVsphereFabricNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVsphereFabricNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVsphereFabricNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetVsphereFabricNetworkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVsphereFabricNetworkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVsphereFabricNetworkOK creates a GetVsphereFabricNetworkOK with default headers values
func NewGetVsphereFabricNetworkOK() *GetVsphereFabricNetworkOK {
	return &GetVsphereFabricNetworkOK{}
}

/* GetVsphereFabricNetworkOK describes a response with status code 200, with default header values.

successful operation
*/
type GetVsphereFabricNetworkOK struct {
	Payload *models.FabricNetworkVsphere
}

func (o *GetVsphereFabricNetworkOK) Error() string {
	return fmt.Sprintf("[GET /iaas/api/fabric-networks-vsphere/{id}][%d] getVsphereFabricNetworkOK  %+v", 200, o.Payload)
}
func (o *GetVsphereFabricNetworkOK) GetPayload() *models.FabricNetworkVsphere {
	return o.Payload
}

func (o *GetVsphereFabricNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FabricNetworkVsphere)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVsphereFabricNetworkForbidden creates a GetVsphereFabricNetworkForbidden with default headers values
func NewGetVsphereFabricNetworkForbidden() *GetVsphereFabricNetworkForbidden {
	return &GetVsphereFabricNetworkForbidden{}
}

/* GetVsphereFabricNetworkForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetVsphereFabricNetworkForbidden struct {
	Payload *models.ServiceErrorResponse
}

func (o *GetVsphereFabricNetworkForbidden) Error() string {
	return fmt.Sprintf("[GET /iaas/api/fabric-networks-vsphere/{id}][%d] getVsphereFabricNetworkForbidden  %+v", 403, o.Payload)
}
func (o *GetVsphereFabricNetworkForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *GetVsphereFabricNetworkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVsphereFabricNetworkNotFound creates a GetVsphereFabricNetworkNotFound with default headers values
func NewGetVsphereFabricNetworkNotFound() *GetVsphereFabricNetworkNotFound {
	return &GetVsphereFabricNetworkNotFound{}
}

/* GetVsphereFabricNetworkNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetVsphereFabricNetworkNotFound struct {
	Payload *models.Error
}

func (o *GetVsphereFabricNetworkNotFound) Error() string {
	return fmt.Sprintf("[GET /iaas/api/fabric-networks-vsphere/{id}][%d] getVsphereFabricNetworkNotFound  %+v", 404, o.Payload)
}
func (o *GetVsphereFabricNetworkNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVsphereFabricNetworkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
